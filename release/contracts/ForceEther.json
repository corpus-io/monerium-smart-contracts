{
  "contractName": "ForceEther",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ownership/mocks/ForceEther.sol\":\"ForceEther\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/ownership/mocks/ForceEther.sol\":{\"keccak256\":\"0x2ae13a5cba65bd472fce8e374652d48c804ad5d13b9a027d424ecd939f8ded32\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://077950261d2fbdd68c1992112139a87d97d1ce532e757bdb419bbc2f402b26f3\",\"dweb:/ipfs/QmSHFFthd4gUjCgV3pM3b8XGzqjGgjAThXXtXqhpgH1mg6\"]}},\"version\":1}",
  "bytecode": "0x608060405260c8806100126000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f5074f4114602d575b600080fd5b603c60383660046057565b603e565b005b8073ffffffffffffffffffffffffffffffffffffffff16ff5b600060208284031215606857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114608b57600080fd5b939250505056fea2646970667358221220a44781838e954d8762d28bca6d9540da6c409628d9c9c4145bd3e288220a906864736f6c634300080b0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063f5074f4114602d575b600080fd5b603c60383660046057565b603e565b005b8073ffffffffffffffffffffffffffffffffffffffff16ff5b600060208284031215606857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114608b57600080fd5b939250505056fea2646970667358221220a44781838e954d8762d28bca6d9540da6c409628d9c9c4145bd3e288220a906864736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:333:55",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:55",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:239:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:36:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "189:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "176:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:23:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "285:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "294:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "297:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "287:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "287:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "287:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "221:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "232:5:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "239:42:55",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "228:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "228:54:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "218:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "218:65:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "211:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "211:73:55"
                  },
                  "nodeType": "YulIf",
                  "src": "208:93:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "310:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "320:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:55",
                "type": ""
              }
            ],
            "src": "14:317:55"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 55,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "271:150:51:-:0;;;;;;;;;",
  "deployedSourceMap": "271:150:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:94;;;;;;:::i;:::-;;:::i;:::-;;;403:10;390:24;;;14:317:55;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;189:9;176:23;239:42;232:5;228:54;221:5;218:65;208:93;;297:1;294;287:12;208:93;320:5;14:317;-1:-1:-1;;;14:317:55:o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n// @title Force Ether into a contract.\n// @notice  even\n// if the contract is not payable.\n// @notice To use, construct the contract with the target as argument.\n// @author Remco Bloemen <remco@neufund.org>\ncontract ForceEther {\n\n  constructor() payable { }\n\n  function destroyAndSend(address payable _recipient) public {\n    selfdestruct(_recipient);\n  }\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts-private/contracts/ownership/mocks/ForceEther.sol",
  "ast": {
    "absolutePath": "project:/contracts/ownership/mocks/ForceEther.sol",
    "exportedSymbols": {
      "ForceEther": [
        4980
      ]
    },
    "id": 4981,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4965,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:51"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ForceEther",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4980,
        "linearizedBaseContracts": [
          4980
        ],
        "name": "ForceEther",
        "nameLocation": "280:10:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4968,
              "nodeType": "Block",
              "src": "318:3:51",
              "statements": []
            },
            "id": 4969,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:51"
            },
            "returnParameters": {
              "id": 4967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:0:51"
            },
            "scope": 4980,
            "src": "296:25:51",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4978,
              "nodeType": "Block",
              "src": "384:35:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4975,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "403:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4974,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "390:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 4976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "390:24:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4977,
                  "nodeType": "ExpressionStatement",
                  "src": "390:24:51"
                }
              ]
            },
            "functionSelector": "f5074f41",
            "id": 4979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyAndSend",
            "nameLocation": "334:14:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4971,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "365:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4979,
                  "src": "349:26:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:15:51",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "348:28:51"
            },
            "returnParameters": {
              "id": 4973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:0:51"
            },
            "scope": 4980,
            "src": "325:94:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4981,
        "src": "271:150:51",
        "usedErrors": []
      }
    ],
    "src": "39:383:51"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ownership/mocks/ForceEther.sol",
    "exportedSymbols": {
      "ForceEther": [
        4980
      ]
    },
    "id": 4981,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4965,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:51"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ForceEther",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4980,
        "linearizedBaseContracts": [
          4980
        ],
        "name": "ForceEther",
        "nameLocation": "280:10:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4968,
              "nodeType": "Block",
              "src": "318:3:51",
              "statements": []
            },
            "id": 4969,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:51"
            },
            "returnParameters": {
              "id": 4967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:0:51"
            },
            "scope": 4980,
            "src": "296:25:51",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4978,
              "nodeType": "Block",
              "src": "384:35:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4975,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "403:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4974,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "390:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 4976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "390:24:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4977,
                  "nodeType": "ExpressionStatement",
                  "src": "390:24:51"
                }
              ]
            },
            "functionSelector": "f5074f41",
            "id": 4979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyAndSend",
            "nameLocation": "334:14:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4971,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "365:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4979,
                  "src": "349:26:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:15:51",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "348:28:51"
            },
            "returnParameters": {
              "id": 4973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:0:51"
            },
            "scope": 4980,
            "src": "325:94:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4981,
        "src": "271:150:51",
        "usedErrors": []
      }
    ],
    "src": "39:383:51"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-11-15T22:20:58.317Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}