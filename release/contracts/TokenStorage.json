{
  "contractName": "TokenStorage",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "subBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "getAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"getAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"subBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External storage for tokens. The storage is implemented in a separate contract to maintain state between token upgrades.\",\"kind\":\"dev\",\"methods\":{\"addBalance(address,uint256)\":{\"details\":\"Increases balance of an address.\",\"params\":{\"amount\":\"Number of units to add.\",\"to\":\"Address to increase.\"}},\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"getAllowed(address,address)\":{\"details\":\"Returns the allowance for a spender.\",\"params\":{\"owner\":\"Address of the owner of the tokens to spend.\",\"spender\":\"Address of the spender.\"},\"returns\":{\"_0\":\"Number of units.\"}},\"getBalance(address)\":{\"details\":\"Returns the balance of an address.\",\"params\":{\"who\":\"Address to lookup.\"},\"returns\":{\"_0\":\"Number of units.\"}},\"getSupply()\":{\"details\":\"Returns the supply of tokens.\",\"returns\":{\"_0\":\"Total supply.\"}},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"_contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\",\"params\":{\"_token\":\"ERC20Basic The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setAllowed(address,address,uint256)\":{\"details\":\"Sets the allowance for a spender.\",\"params\":{\"amount\":\"Qunatity of allowance.\",\"owner\":\"Address of the owner of the tokens to spend.\",\"spender\":\"Address of the spender.\"}},\"subBalance(address,uint256)\":{\"details\":\"Decreases balance of an address.\",\"params\":{\"amount\":\"Number of units to subtract.\",\"from\":\"Address to decrease.\"}},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC223 compatible tokens\",\"params\":{\"_data\":\"Bytes The data passed from the caller.\",\"_from\":\"address The address that is transferring the tokens\",\"_value\":\"uint256 the amount of the specified token\"}},\"transferOwnership(address)\":{\"details\":\"Explicit override of transferOwnership from Claimable and Ownable\",\"params\":{\"newOwner\":\"Address to transfer ownership to.\"}}},\"title\":\"TokenStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenStorage.sol\":\"TokenStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/TokenStorage.sol\":{\"keccak256\":\"0xe849abab5585dafabca5fe3d306d0fbdf1792be872209f5b617e0617ff9d6d92\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://e03762b54fe26cfeadc0f6e942ddf570b7e2f1d258c97ec14dd1822b39a4670a\",\"dweb:/ipfs/QmYMhr87b8d5cBSBry9rTT7F7DdQW852SB9QZK1oRdmYmc\"]},\"project:/contracts/TokenStorageLib.sol\":{\"keccak256\":\"0xb05416996147c191c8415c6f79845002fda2358f6faffc28bbddb74f1463f4d3\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://fb4a8bf65dde924a9e3c98d975b60ff08cde7e7aa97cac78f8875b26cd12cc8f\",\"dweb:/ipfs/QmSSDGzJEXZ3FAL29bN59tuj4M7hARvUQo2WxsNaCBZ9yt\"]},\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x40c5b0c6c8d908bc764cdcce514c824ce842411f43180111de7d0a75e6ae553e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de45edfc949d8922e1c9f07af298c29edabeb26454d8a2eb093a81b32474d610\",\"dweb:/ipfs/QmZyqeY8y8h6XQ23h2rzpr6bVEa7FCCCu7XwTa8fcJc4cY\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xf0625c71482671d551c3322ea3ab9eceedd2ec0bdbfdb12de13f27a3fffd38b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0d1ddbbd28155e759df54b2afad17c440b76bae1d66259679ff53b0aca8e81\",\"dweb:/ipfs/QmXdXPDuW2VDBB7YWoms55rb883noVFJXixKoR1namrwJR\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055341561002e57600080fd5b610b1f8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100ec5760003560e01c80638da5cb5b11610091578063cf8eeb7e11610063578063cf8eeb7e146101be578063e30c3978146101d1578063f2fde38b146101e4578063f8b2cb4f146101f757005b80638da5cb5b146101655780639f727c2714610190578063c0ee0b8a14610198578063c7c7e9ea146101ab57005b806333dd1b8a116100ca57806333dd1b8a146101275780634e71e0c81461013a5780636c9c2faf14610142578063715018a61461015d57005b806317ffc320146100ee57806321e5383a146101015780632aed7f3f14610114575b005b6100ec6100fc366004610962565b61020a565b6100ec61010f36600461097f565b6102c6565b6100ec610122366004610962565b610374565b6100ec6101353660046109ab565b610400565b6100ec6104b6565b61014a61053e565b6040519081526020015b60405180910390f35b6100ec6105d3565b600054610178906001600160a01b031681565b6040516001600160a01b039091168152602001610154565b6100ec61063f565b6100ec6101a63660046109ec565b600080fd5b61014a6101b9366004610a75565b610693565b6100ec6101cc36600461097f565b610741565b600154610178906001600160a01b031681565b6100ec6101f2366004610962565b6107bf565b61014a610205366004610962565b6107c8565b6000546001600160a01b0316331461022157600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190610aae565b6000549091506102c2906001600160a01b0384811691168361086d565b5050565b6000546001600160a01b031633146102dd57600080fd5b6040517f7aeb0ed5000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b03831660248201526044810182905273__TokenStorageLib_______________________90637aeb0ed5906064015b60006040518083038186803b15801561035857600080fd5b505af415801561036c573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461038b57600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b1580156103ec57600080fd5b505af115801561036c573d6000803e3d6000fd5b6000546001600160a01b0316331461041757600080fd5b6040517f5599b4b7000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b038085166024830152831660448201526064810182905273__TokenStorageLib_______________________90635599b4b79060840160006040518083038186803b15801561049957600080fd5b505af41580156104ad573d6000803e3d6000fd5b50505050505050565b6001546001600160a01b031633146104cd57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6040517f072f9a500000000000000000000000000000000000000000000000000000000081526002600482015260009073__TokenStorageLib_______________________9063072f9a5090602401602060405180830381865af41580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610aae565b905090565b6000546001600160a01b031633146105ea57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461065657600080fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610690573d6000803e3d6000fd5b50565b6040517f9daeae1e000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b0380841660248301528216604482015260009073__TokenStorageLib_______________________90639daeae1e90606401602060405180830381865af4158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610aae565b9392505050565b6000546001600160a01b0316331461075857600080fd5b6040517fd9c7339e000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b03831660248201526044810182905273__TokenStorageLib_______________________9063d9c7339e90606401610340565b61069081610907565b6040517fb0aacf24000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b038216602482015260009073__TokenStorageLib_______________________9063b0aacf2490604401602060405180830381865af4158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190610aae565b92915050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190610ac7565b61090257600080fd5b505050565b6000546001600160a01b0316331461091e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038116811461069057600080fd5b60006020828403121561097457600080fd5b813561073a8161094d565b6000806040838503121561099257600080fd5b823561099d8161094d565b946020939093013593505050565b6000806000606084860312156109c057600080fd5b83356109cb8161094d565b925060208401356109db8161094d565b929592945050506040919091013590565b60008060008060608587031215610a0257600080fd5b8435610a0d8161094d565b935060208501359250604085013567ffffffffffffffff80821115610a3157600080fd5b818701915087601f830112610a4557600080fd5b813581811115610a5457600080fd5b886020828501011115610a6657600080fd5b95989497505060200194505050565b60008060408385031215610a8857600080fd5b8235610a938161094d565b91506020830135610aa38161094d565b809150509250929050565b600060208284031215610ac057600080fd5b5051919050565b600060208284031215610ad957600080fd5b8151801515811461073a57600080fdfea264697066735822122090bbaf6a983f554be7623edb20f67f8b2a7b1fe5ebd324d5e34239852b81e66564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec5760003560e01c80638da5cb5b11610091578063cf8eeb7e11610063578063cf8eeb7e146101be578063e30c3978146101d1578063f2fde38b146101e4578063f8b2cb4f146101f757005b80638da5cb5b146101655780639f727c2714610190578063c0ee0b8a14610198578063c7c7e9ea146101ab57005b806333dd1b8a116100ca57806333dd1b8a146101275780634e71e0c81461013a5780636c9c2faf14610142578063715018a61461015d57005b806317ffc320146100ee57806321e5383a146101015780632aed7f3f14610114575b005b6100ec6100fc366004610962565b61020a565b6100ec61010f36600461097f565b6102c6565b6100ec610122366004610962565b610374565b6100ec6101353660046109ab565b610400565b6100ec6104b6565b61014a61053e565b6040519081526020015b60405180910390f35b6100ec6105d3565b600054610178906001600160a01b031681565b6040516001600160a01b039091168152602001610154565b6100ec61063f565b6100ec6101a63660046109ec565b600080fd5b61014a6101b9366004610a75565b610693565b6100ec6101cc36600461097f565b610741565b600154610178906001600160a01b031681565b6100ec6101f2366004610962565b6107bf565b61014a610205366004610962565b6107c8565b6000546001600160a01b0316331461022157600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190610aae565b6000549091506102c2906001600160a01b0384811691168361086d565b5050565b6000546001600160a01b031633146102dd57600080fd5b6040517f7aeb0ed5000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b03831660248201526044810182905273__TokenStorageLib_______________________90637aeb0ed5906064015b60006040518083038186803b15801561035857600080fd5b505af415801561036c573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461038b57600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b1580156103ec57600080fd5b505af115801561036c573d6000803e3d6000fd5b6000546001600160a01b0316331461041757600080fd5b6040517f5599b4b7000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b038085166024830152831660448201526064810182905273__TokenStorageLib_______________________90635599b4b79060840160006040518083038186803b15801561049957600080fd5b505af41580156104ad573d6000803e3d6000fd5b50505050505050565b6001546001600160a01b031633146104cd57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6040517f072f9a500000000000000000000000000000000000000000000000000000000081526002600482015260009073__TokenStorageLib_______________________9063072f9a5090602401602060405180830381865af41580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610aae565b905090565b6000546001600160a01b031633146105ea57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461065657600080fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610690573d6000803e3d6000fd5b50565b6040517f9daeae1e000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b0380841660248301528216604482015260009073__TokenStorageLib_______________________90639daeae1e90606401602060405180830381865af4158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610aae565b9392505050565b6000546001600160a01b0316331461075857600080fd5b6040517fd9c7339e000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b03831660248201526044810182905273__TokenStorageLib_______________________9063d9c7339e90606401610340565b61069081610907565b6040517fb0aacf24000000000000000000000000000000000000000000000000000000008152600260048201526001600160a01b038216602482015260009073__TokenStorageLib_______________________9063b0aacf2490604401602060405180830381865af4158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190610aae565b92915050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190610ac7565b61090257600080fd5b505050565b6000546001600160a01b0316331461091e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038116811461069057600080fd5b60006020828403121561097457600080fd5b813561073a8161094d565b6000806040838503121561099257600080fd5b823561099d8161094d565b946020939093013593505050565b6000806000606084860312156109c057600080fd5b83356109cb8161094d565b925060208401356109db8161094d565b929592945050506040919091013590565b60008060008060608587031215610a0257600080fd5b8435610a0d8161094d565b935060208501359250604085013567ffffffffffffffff80821115610a3157600080fd5b818701915087601f830112610a4557600080fd5b813581811115610a5457600080fd5b886020828501011115610a6657600080fd5b95989497505060200194505050565b60008060408385031215610a8857600080fd5b8235610a938161094d565b91506020830135610aa38161094d565b809150509250929050565b600060208284031215610ac057600080fd5b5051919050565b600060208284031215610ad957600080fd5b8151801515811461073a57600080fdfea264697066735822122090bbaf6a983f554be7623edb20f67f8b2a7b1fe5ebd324d5e34239852b81e66564736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5890:56",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:56",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:109:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "94:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "105:5:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "112:42:56",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:54:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "91:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:65:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "84:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:73:56"
                  },
                  "nodeType": "YulIf",
                  "src": "81:93:56"
                }
              ]
            },
            "name": "validator_revert_contract_ERC20Basic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:56",
                "type": ""
              }
            ],
            "src": "14:166:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "274:189:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "320:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "329:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "322:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "322:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "322:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "295:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "291:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "291:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "284:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "345:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "358:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "349:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "427:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "390:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:43:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "452:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20Basic_$6012",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "240:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "251:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "263:6:56",
                "type": ""
              }
            ],
            "src": "185:278:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "555:240:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "601:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "610:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "613:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "603:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "603:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "603:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "576:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "585:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "572:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "572:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "597:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "565:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "626:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "652:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "639:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "630:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "708:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "671:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "671:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "671:43:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "723:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "733:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "747:42:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "774:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "785:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "770:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "770:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "757:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:32:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "747:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "513:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "524:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "536:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "544:6:56",
                "type": ""
              }
            ],
            "src": "468:327:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "870:189:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "916:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "925:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "928:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "918:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "918:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "918:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "891:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "900:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "887:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "887:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "912:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "883:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "880:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "941:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "967:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "954:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "945:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1023:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "986:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "986:43:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1038:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1048:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1038:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:56",
                "type": ""
              }
            ],
            "src": "800:259:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1168:376:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1214:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1223:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1226:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1216:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1216:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1216:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1189:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1198:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1185:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:56",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1181:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1181:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1178:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1239:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1265:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1252:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1243:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1321:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1284:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1284:43:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1346:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1336:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1360:47:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1392:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1403:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1388:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1388:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1375:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:32:56"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1364:7:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1453:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1416:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:45:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1416:45:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1470:17:56",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1480:7:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1470:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1496:42:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1523:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1534:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1519:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1519:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1506:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1506:32:56"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1496:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1118:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1129:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1141:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1149:6:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1157:6:56",
                "type": ""
              }
            ],
            "src": "1064:480:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1650:76:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1660:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1672:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1683:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1668:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1660:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1702:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1713:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1695:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1695:25:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1619:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1630:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1641:4:56",
                "type": ""
              }
            ],
            "src": "1549:177:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1832:125:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1842:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1854:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1865:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1850:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1850:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1842:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1884:9:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1899:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1907:42:56",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1895:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1895:55:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1877:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1877:74:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1877:74:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1801:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1812:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1823:4:56",
                "type": ""
              }
            ],
            "src": "1731:226:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2085:683:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2131:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2140:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2143:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2133:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2133:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2133:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2106:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2115:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2127:2:56",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2098:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2095:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2156:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2182:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2169:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2169:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2160:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2238:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "2201:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2201:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2201:43:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2263:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2253:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2277:42:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2304:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2315:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2300:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2300:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2287:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2287:32:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2328:46:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2359:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2370:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2355:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2355:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2342:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:32:56"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2332:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2383:28:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2393:18:56",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2387:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2438:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2447:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2450:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2440:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2440:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2440:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2426:6:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2434:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2423:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:14:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2420:34:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2463:32:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2477:9:56"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2488:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2473:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:22:56"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2467:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2543:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2552:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2555:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2545:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2545:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2545:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2522:2:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2526:4:56",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2518:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2518:13:56"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2533:7:56"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2514:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2514:27:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2507:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2507:35:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2504:55:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2568:30:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2595:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2582:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2582:16:56"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2572:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2625:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2634:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2637:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2627:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2627:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2627:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2613:6:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2621:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2610:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:14:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2607:34:56"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2691:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2700:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2703:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2693:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2693:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2693:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2664:2:56"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2668:6:56"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2660:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2660:15:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2677:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2656:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:24:56"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2682:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2653:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:37:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2650:57:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2716:21:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2730:2:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2734:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2726:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2726:11:56"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2716:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2746:16:56",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2756:6:56"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2746:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2027:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2038:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2050:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2058:6:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2066:6:56",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2074:6:56",
                "type": ""
              }
            ],
            "src": "1962:806:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2860:325:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2906:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2915:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2918:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2908:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2908:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2908:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2881:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2890:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2877:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2877:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2902:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2873:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2873:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2870:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2931:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2957:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2944:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2935:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3013:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "2976:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2976:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2976:43:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3028:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3038:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3028:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3052:47:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3084:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3095:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3080:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3080:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3067:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3067:32:56"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3056:7:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3145:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "3108:36:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3108:45:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3108:45:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3162:17:56",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3172:7:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3162:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2818:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2829:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2841:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2849:6:56",
                "type": ""
              }
            ],
            "src": "2773:412:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3271:103:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3317:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3326:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3329:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3319:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3319:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3319:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3292:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3301:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3288:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3288:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3313:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3284:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3284:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "3281:52:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3342:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3358:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3352:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3352:16:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3342:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3237:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3248:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3260:6:56",
                "type": ""
              }
            ],
            "src": "3190:184:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3575:211:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3585:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3597:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3608:2:56",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3593:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3585:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3627:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3638:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3620:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3620:25:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3665:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3676:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3661:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3661:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3685:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3693:42:56",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3681:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3681:55:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3654:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:83:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3654:83:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3757:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3768:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3753:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3753:18:56"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3773:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3746:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:34:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3746:34:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3528:9:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3539:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3547:6:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3555:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3566:4:56",
                "type": ""
              }
            ],
            "src": "3379:407:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4015:285:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4025:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4037:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4048:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4033:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4025:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4068:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4079:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4061:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4061:25:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4095:52:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4105:42:56",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4099:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4167:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4178:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4163:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4187:6:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4195:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4183:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4183:15:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4156:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4156:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4156:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4219:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4230:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4215:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4215:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4239:6:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4247:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4235:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:15:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4208:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4208:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4208:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4271:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4282:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4267:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:18:56"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4287:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4260:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:34:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4260:34:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3960:9:56",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3971:6:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3979:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3987:6:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3995:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4006:4:56",
                "type": ""
              }
            ],
            "src": "3791:509:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4445:76:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4455:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4467:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4478:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4463:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4463:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4455:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4497:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4508:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4490:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4490:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4490:25:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr__to_t_uint256__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4414:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4425:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4436:4:56",
                "type": ""
              }
            ],
            "src": "4305:216:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4722:241:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4732:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4744:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4755:2:56",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4740:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4740:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4732:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4774:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4785:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4767:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4767:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4767:25:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4801:52:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4811:42:56",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4805:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4873:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4884:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4869:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4869:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4893:6:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4901:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4889:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4889:15:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4862:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4862:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4862:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4925:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4936:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4921:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4921:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4945:6:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4953:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4941:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4941:15:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4914:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4914:43:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4914:43:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4675:9:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4686:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4694:6:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4702:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4713:4:56",
                "type": ""
              }
            ],
            "src": "4526:437:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5136:168:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5146:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5158:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5169:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5154:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5154:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5146:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5188:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5199:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5181:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5181:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5181:25:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5226:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5237:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5222:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5222:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5246:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5254:42:56",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5242:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5242:55:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5215:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5215:83:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5215:83:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address__to_t_uint256_t_address__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5097:9:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5108:6:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5116:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5127:4:56",
                "type": ""
              }
            ],
            "src": "4968:336:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5438:168:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5448:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5460:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5471:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5456:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5456:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5448:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5490:9:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5505:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5513:42:56",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5501:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5501:55:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5483:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5483:74:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5483:74:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5577:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5588:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5573:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5573:18:56"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5593:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5566:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5566:34:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5566:34:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5399:9:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5410:6:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5418:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5429:4:56",
                "type": ""
              }
            ],
            "src": "5309:297:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5689:199:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5735:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5744:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5747:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5737:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5737:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5737:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5710:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5719:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5706:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5706:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5731:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5702:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5702:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "5699:52:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5760:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5779:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5773:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:16:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5764:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5842:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5851:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5854:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5844:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5844:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5844:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5811:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5832:5:56"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5825:6:56"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5825:13:56"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5818:6:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5818:21:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5808:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5808:32:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5801:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5801:40:56"
                  },
                  "nodeType": "YulIf",
                  "src": "5798:60:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5867:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5877:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5867:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5655:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5666:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5678:6:56",
                "type": ""
              }
            ],
            "src": "5611:277:56"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ERC20Basic(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20Basic_$6012(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ERC20Basic(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ERC20Basic(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_library_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_struct$_TokenStorage_$5076_storage_ptr_t_address__to_t_uint256_t_address__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 56,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "977:2214:39:-:0;;;;;;;;;;;;-1:-1:-1;588:5:49;:18;;-1:-1:-1;;;;;;588:18:49;596:10;588:18;;;982:9:46;:14;974:23;;;;;;977:2214:39;;;;;;",
  "deployedSourceMap": "977:2214:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:161:43;;;;;;:::i;:::-;;:::i;1307:116:39:-;;;;;;:::i;:::-;;:::i;512:166:45:-;;;;;;:::i;:::-;;:::i;1923:148:39:-;;;;;;:::i;:::-;;:::i;836:164:44:-;;;:::i;2164:98:39:-;;;:::i;:::-;;;1695:25:56;;;1683:2;1668:18;2164:98:39;;;;;;;;1022:111:49;;;:::i;269:20::-;;;;;-1:-1:-1;;;;;269:20:49;;;;;;-1:-1:-1;;;;;1895:55:56;;;1877:74;;1865:2;1850:18;269:20:49;1731:226:56;1213:100:46;;;:::i;667:169:47:-;;;;;;:::i;:::-;823:8;;;2728:172:39;;;;;;:::i;:::-;;:::i;1580:120::-;;;;;;:::i;:::-;;:::i;291:27:44:-;;;;;-1:-1:-1;;;;;291:27:44;;;3057:132:39;;;;;;:::i;:::-;;:::i;2400:114::-;;;;;;:::i;:::-;;:::i;629:161:43:-;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;713:31:43::1;::::0;;;;738:4:::1;713:31;::::0;::::1;1877:74:56::0;695:15:43::1;::::0;-1:-1:-1;;;;;713:16:43;::::1;::::0;::::1;::::0;1850:18:56;;713:31:43::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;770:5;::::0;695:49;;-1:-1:-1;750:35:43::1;::::0;-1:-1:-1;;;;;750:19:43;;::::1;::::0;770:5:::1;695:49:::0;750:19:::1;:35::i;:::-;689:101;629:161:::0;:::o;1307:116:39:-;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;1381:35:39::1;::::0;;;;:12:::1;:35;::::0;::::1;3620:25:56::0;-1:-1:-1;;;;;3681:55:56;;3661:18;;;3654:83;3753:18;;;3746:34;;;1381:23:39::1;::::0;::::1;::::0;3593:18:56;;1381:35:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1307:116:::0;;:::o;512:166:45:-;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;585:20:45::1;667:5:::0;636:37:::1;::::0;;;;-1:-1:-1;;;;;667:5:45;;::::1;636:37;::::0;::::1;1877:74:56::0;616:13:45;;636:30;::::1;::::0;::::1;::::0;1850:18:56;;636:37:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;1923:148:39::0;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;2017:47:39::1;::::0;;;;:12:::1;:47;::::0;::::1;4061:25:56::0;-1:-1:-1;;;;;4183:15:56;;;4163:18;;;4156:43;4235:15;;4215:18;;;4208:43;4267:18;;;4260:34;;;2017:23:39::1;::::0;::::1;::::0;4033:19:56;;2017:47:39::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1923:148:::0;;;:::o;836:164:44:-;471:12;;-1:-1:-1;;;;;471:12:44;457:10;:26;449:35;;;;;;925:12:::1;::::0;::::1;918:5:::0;;897:41:::1;::::0;-1:-1:-1;;;;;925:12:44;;::::1;::::0;918:5;;::::1;::::0;897:41:::1;::::0;::::1;952:12;::::0;;::::1;944:20:::0;;-1:-1:-1;;944:20:44;;::::1;-1:-1:-1::0;;;;;952:12:44;::::1;944:20;::::0;;;970:25:::1;::::0;;836:164::o;2164:98:39:-;2231:24;;;;;:12;:24;;;1695:25:56;2208:4:39;;2231:22;;;;1668:18:56;;2231:24:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2224:31;;2164:98;:::o;1022:111:49:-;740:5;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;1098:5:::1;::::0;;1079:25:::1;::::0;-1:-1:-1;;;;;1098:5:49;;::::1;::::0;1079:25:::1;::::0;::::1;1126:1;1110:18:::0;;-1:-1:-1;;1110:18:49::1;::::0;;1022:111::o;1213:100:46:-;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;1270:5:46::1;::::0;;1262:46:::1;::::0;-1:-1:-1;;;;;1270:5:46;;::::1;::::0;1286:21:::1;1262:46:::0;::::1;;;::::0;1286:21;;1262:46;1270:5;1262:46;1286:21;1270:5;1262:46;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1213:100::o:0;2728:172:39:-;2854:39;;;;;:12;:39;;;4767:25:56;-1:-1:-1;;;;;4889:15:56;;;4869:18;;;4862:43;4941:15;;4921:18;;;4914:43;2827:4:39;;2854:23;;;;4740:18:56;;2854:39:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2847:46;2728:172;-1:-1:-1;;;2728:172:39:o;1580:120::-;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;1656:37:39::1;::::0;;;;:12:::1;:37;::::0;::::1;3620:25:56::0;-1:-1:-1;;;;;3681:55:56;;3661:18;;;3654:83;3753:18;;;3746:34;;;1656:23:39::1;::::0;::::1;::::0;3593:18:56;;1656:37:39::1;3379:407:56::0;3057:132:39;3145:37;3173:8;3145:27;:37::i;2400:114::-;2479:28;;;;;:12;:28;;;5181:25:56;-1:-1:-1;;;;;5242:55:56;;5222:18;;;5215:83;2456:4:39;;2479:23;;;;5154:18:56;;2479:28:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2472:35;2400:114;-1:-1:-1;;2400:114:39:o;376:149:55:-;491:28;;;;;-1:-1:-1;;;;;5501:55:56;;;491:28:55;;;5483:74:56;5573:18;;;5566:34;;;491:15:55;;;;;5456:18:56;;491:28:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;483:37;;;;;;376:149;;;:::o;639:113:44:-;740:5:49;;-1:-1:-1;;;;;740:5:49;726:10;:19;718:28;;;;;;724:12:44::1;:23:::0;;-1:-1:-1;;724:23:44::1;-1:-1:-1::0;;;;;724:23:44;;;::::1;::::0;;;::::1;::::0;;639:113::o;14:166:56:-;-1:-1:-1;;;;;105:5:56;101:54;94:5;91:65;81:93;;170:1;167;160:12;185:278;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;371:9;358:23;390:43;427:5;390:43;:::i;468:327::-;536:6;544;597:2;585:9;576:7;572:23;568:32;565:52;;;613:1;610;603:12;565:52;652:9;639:23;671:43;708:5;671:43;:::i;:::-;733:5;785:2;770:18;;;;757:32;;-1:-1:-1;;;468:327:56:o;1064:480::-;1141:6;1149;1157;1210:2;1198:9;1189:7;1185:23;1181:32;1178:52;;;1226:1;1223;1216:12;1178:52;1265:9;1252:23;1284:43;1321:5;1284:43;:::i;:::-;1346:5;-1:-1:-1;1403:2:56;1388:18;;1375:32;1416:45;1375:32;1416:45;:::i;:::-;1064:480;;1480:7;;-1:-1:-1;;;1534:2:56;1519:18;;;;1506:32;;1064:480::o;1962:806::-;2050:6;2058;2066;2074;2127:2;2115:9;2106:7;2102:23;2098:32;2095:52;;;2143:1;2140;2133:12;2095:52;2182:9;2169:23;2201:43;2238:5;2201:43;:::i;:::-;2263:5;-1:-1:-1;2315:2:56;2300:18;;2287:32;;-1:-1:-1;2370:2:56;2355:18;;2342:32;2393:18;2423:14;;;2420:34;;;2450:1;2447;2440:12;2420:34;2488:6;2477:9;2473:22;2463:32;;2533:7;2526:4;2522:2;2518:13;2514:27;2504:55;;2555:1;2552;2545:12;2504:55;2595:2;2582:16;2621:2;2613:6;2610:14;2607:34;;;2637:1;2634;2627:12;2607:34;2682:7;2677:2;2668:6;2664:2;2660:15;2656:24;2653:37;2650:57;;;2703:1;2700;2693:12;2650:57;1962:806;;;;-1:-1:-1;;2734:2:56;2726:11;;-1:-1:-1;;;1962:806:56:o;2773:412::-;2841:6;2849;2902:2;2890:9;2881:7;2877:23;2873:32;2870:52;;;2918:1;2915;2908:12;2870:52;2957:9;2944:23;2976:43;3013:5;2976:43;:::i;:::-;3038:5;-1:-1:-1;3095:2:56;3080:18;;3067:32;3108:45;3067:32;3108:45;:::i;:::-;3172:7;3162:17;;;2773:412;;;;;:::o;3190:184::-;3260:6;3313:2;3301:9;3292:7;3288:23;3284:32;3281:52;;;3329:1;3326;3319:12;3281:52;-1:-1:-1;3352:16:56;;3190:184;-1:-1:-1;3190:184:56:o;5611:277::-;5678:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:52;;;5747:1;5744;5737:12;5699:52;5779:9;5773:16;5832:5;5825:13;5818:21;5811:5;5808:32;5798:60;;5854:1;5851;5844:12",
  "source": "/* SPDX-License-Identifier: apache-2.0 */\n/**\n * Copyright 2022 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.8.11;\n\nimport \"./ownership/Claimable.sol\";\nimport \"./ownership/CanReclaimToken.sol\";\nimport \"./ownership/NoOwner.sol\";\nimport \"./TokenStorageLib.sol\";\n\n/**\n * @title TokenStorage\n * @dev External storage for tokens.\n * The storage is implemented in a separate contract to maintain state\n * between token upgrades.\n */\ncontract TokenStorage is Claimable, CanReclaimToken, NoOwner {\n\n    using TokenStorageLib for TokenStorageLib.TokenStorage;\n\n    TokenStorageLib.TokenStorage internal tokenStorage;\n\n    /**\n     * @dev Increases balance of an address.\n     * @param to Address to increase.\n     * @param amount Number of units to add.\n     */\n    function addBalance(address to, uint amount) external onlyOwner {\n        tokenStorage.addBalance(to, amount);\n    }\n\n    /**\n     * @dev Decreases balance of an address.\n     * @param from Address to decrease.\n     * @param amount Number of units to subtract.\n     */\n    function subBalance(address from, uint amount) external onlyOwner {\n        tokenStorage.subBalance(from, amount);\n    }\n\n    /**\n     * @dev Sets the allowance for a spender.\n     * @param owner Address of the owner of the tokens to spend.\n     * @param spender Address of the spender.\n     * @param amount Qunatity of allowance.\n     */\n    function setAllowed(address owner, address spender, uint amount) external onlyOwner {\n        tokenStorage.setAllowed(owner, spender, amount);\n    }\n\n    /**\n     * @dev Returns the supply of tokens.\n     * @return Total supply.\n     */\n    function getSupply() external view returns (uint) {\n        return tokenStorage.getSupply();\n    }\n\n    /**\n     * @dev Returns the balance of an address.\n     * @param who Address to lookup.\n     * @return Number of units.\n     */\n    function getBalance(address who) external view returns (uint) {\n        return tokenStorage.getBalance(who);\n    }\n\n    /**\n     * @dev Returns the allowance for a spender.\n     * @param owner Address of the owner of the tokens to spend.\n     * @param spender Address of the spender.\n     * @return Number of units.\n     */\n    function getAllowed(address owner, address spender)\n        external\n        view\n        returns (uint)\n    {\n        return tokenStorage.getAllowed(owner, spender);\n    }\n\n    /**\n     * @dev Explicit override of transferOwnership from Claimable and Ownable\n     * @param newOwner Address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public override(Claimable, Ownable){\n      Claimable.transferOwnership(newOwner);\n    }\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts-private/contracts/TokenStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenStorage.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        5438
      ],
      "Claimable": [
        5496
      ],
      "ERC20Basic": [
        6012
      ],
      "HasNoContracts": [
        5525
      ],
      "HasNoEther": [
        5568
      ],
      "HasNoTokens": [
        5595
      ],
      "NoOwner": [
        5608
      ],
      "Ownable": [
        5702
      ],
      "SafeERC20": [
        6036
      ],
      "SafeMath": [
        2236
      ],
      "TokenStorage": [
        5057
      ],
      "TokenStorageLib": [
        5224
      ]
    },
    "id": 5058,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4923,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:39"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 4924,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5058,
        "sourceUnit": 5497,
        "src": "666:35:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./ownership/CanReclaimToken.sol",
        "id": 4925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5058,
        "sourceUnit": 5439,
        "src": "702:41:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/NoOwner.sol",
        "file": "./ownership/NoOwner.sol",
        "id": 4926,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5058,
        "sourceUnit": 5609,
        "src": "744:33:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenStorageLib.sol",
        "file": "./TokenStorageLib.sol",
        "id": 4927,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5058,
        "sourceUnit": 5225,
        "src": "778:31:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4929,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5496,
              "src": "1002:9:39"
            },
            "id": 4930,
            "nodeType": "InheritanceSpecifier",
            "src": "1002:9:39"
          },
          {
            "baseName": {
              "id": 4931,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5438,
              "src": "1013:15:39"
            },
            "id": 4932,
            "nodeType": "InheritanceSpecifier",
            "src": "1013:15:39"
          },
          {
            "baseName": {
              "id": 4933,
              "name": "NoOwner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5608,
              "src": "1030:7:39"
            },
            "id": 4934,
            "nodeType": "InheritanceSpecifier",
            "src": "1030:7:39"
          }
        ],
        "canonicalName": "TokenStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4928,
          "nodeType": "StructuredDocumentation",
          "src": "811:165:39",
          "text": " @title TokenStorage\n @dev External storage for tokens.\n The storage is implemented in a separate contract to maintain state\n between token upgrades."
        },
        "fullyImplemented": true,
        "id": 5057,
        "linearizedBaseContracts": [
          5057,
          5608,
          5525,
          5595,
          5438,
          5568,
          5496,
          5702
        ],
        "name": "TokenStorage",
        "nameLocation": "986:12:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4938,
            "libraryName": {
              "id": 4935,
              "name": "TokenStorageLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5224,
              "src": "1051:15:39"
            },
            "nodeType": "UsingForDirective",
            "src": "1045:55:39",
            "typeName": {
              "id": 4937,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4936,
                "name": "TokenStorageLib.TokenStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5076,
                "src": "1071:28:39"
              },
              "referencedDeclaration": 5076,
              "src": "1071:28:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TokenStorage_$5076_storage_ptr",
                "typeString": "struct TokenStorageLib.TokenStorage"
              }
            }
          },
          {
            "constant": false,
            "id": 4941,
            "mutability": "mutable",
            "name": "tokenStorage",
            "nameLocation": "1144:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 5057,
            "src": "1106:50:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
              "typeString": "struct TokenStorageLib.TokenStorage"
            },
            "typeName": {
              "id": 4940,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4939,
                "name": "TokenStorageLib.TokenStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5076,
                "src": "1106:28:39"
              },
              "referencedDeclaration": 5076,
              "src": "1106:28:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TokenStorage_$5076_storage_ptr",
                "typeString": "struct TokenStorageLib.TokenStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4958,
              "nodeType": "Block",
              "src": "1371:52:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4954,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4944,
                        "src": "1405:2:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4955,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4946,
                        "src": "1409:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4951,
                        "name": "tokenStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "1381:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
                          "typeString": "struct TokenStorageLib.TokenStorage storage ref"
                        }
                      },
                      "id": 4953,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5112,
                      "src": "1381:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TokenStorage_$5076_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TokenStorage_$5076_storage_ptr_$",
                        "typeString": "function (struct TokenStorageLib.TokenStorage storage pointer,address,uint256)"
                      }
                    },
                    "id": 4956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1381:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4957,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:35:39"
                }
              ]
            },
            "documentation": {
              "id": 4942,
              "nodeType": "StructuredDocumentation",
              "src": "1163:139:39",
              "text": " @dev Increases balance of an address.\n @param to Address to increase.\n @param amount Number of units to add."
            },
            "functionSelector": "21e5383a",
            "id": 4959,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4948,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5645,
                  "src": "1361:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1361:9:39"
              }
            ],
            "name": "addBalance",
            "nameLocation": "1316:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4944,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1335:2:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4959,
                  "src": "1327:10:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4946,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1344:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4959,
                  "src": "1339:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4945,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1326:25:39"
            },
            "returnParameters": {
              "id": 4950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:39"
            },
            "scope": 5057,
            "src": "1307:116:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4976,
              "nodeType": "Block",
              "src": "1646:54:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4972,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4962,
                        "src": "1680:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4973,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4964,
                        "src": "1686:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4969,
                        "name": "tokenStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "1656:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
                          "typeString": "struct TokenStorageLib.TokenStorage storage ref"
                        }
                      },
                      "id": 4971,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5148,
                      "src": "1656:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TokenStorage_$5076_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TokenStorage_$5076_storage_ptr_$",
                        "typeString": "function (struct TokenStorageLib.TokenStorage storage pointer,address,uint256)"
                      }
                    },
                    "id": 4974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1656:37:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4975,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:37:39"
                }
              ]
            },
            "documentation": {
              "id": 4960,
              "nodeType": "StructuredDocumentation",
              "src": "1429:146:39",
              "text": " @dev Decreases balance of an address.\n @param from Address to decrease.\n @param amount Number of units to subtract."
            },
            "functionSelector": "cf8eeb7e",
            "id": 4977,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4966,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5645,
                  "src": "1636:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1636:9:39"
              }
            ],
            "name": "subBalance",
            "nameLocation": "1589:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4962,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1608:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "1600:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4964,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1619:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "1614:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4963,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1599:27:39"
            },
            "returnParameters": {
              "id": 4968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:0:39"
            },
            "scope": 5057,
            "src": "1580:120:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4997,
              "nodeType": "Block",
              "src": "2007:64:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4992,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4980,
                        "src": "2041:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4993,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4982,
                        "src": "2048:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4994,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4984,
                        "src": "2057:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4989,
                        "name": "tokenStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "2017:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
                          "typeString": "struct TokenStorageLib.TokenStorage storage ref"
                        }
                      },
                      "id": 4991,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5172,
                      "src": "2017:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TokenStorage_$5076_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TokenStorage_$5076_storage_ptr_$",
                        "typeString": "function (struct TokenStorageLib.TokenStorage storage pointer,address,address,uint256)"
                      }
                    },
                    "id": 4995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2017:47:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4996,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:47:39"
                }
              ]
            },
            "documentation": {
              "id": 4978,
              "nodeType": "StructuredDocumentation",
              "src": "1706:212:39",
              "text": " @dev Sets the allowance for a spender.\n @param owner Address of the owner of the tokens to spend.\n @param spender Address of the spender.\n @param amount Qunatity of allowance."
            },
            "functionSelector": "33dd1b8a",
            "id": 4998,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4986,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5645,
                  "src": "1997:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1997:9:39"
              }
            ],
            "name": "setAllowed",
            "nameLocation": "1932:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4980,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1951:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4998,
                  "src": "1943:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4982,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1966:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4998,
                  "src": "1958:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4984,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1980:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4998,
                  "src": "1975:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4983,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:45:39"
            },
            "returnParameters": {
              "id": 4988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2007:0:39"
            },
            "scope": 5057,
            "src": "1923:148:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5008,
              "nodeType": "Block",
              "src": "2214:48:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5004,
                        "name": "tokenStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "2231:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
                          "typeString": "struct TokenStorageLib.TokenStorage storage ref"
                        }
                      },
                      "id": 5005,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5185,
                      "src": "2231:22:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_TokenStorage_$5076_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_TokenStorage_$5076_storage_ptr_$",
                        "typeString": "function (struct TokenStorageLib.TokenStorage storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:24:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5003,
                  "id": 5007,
                  "nodeType": "Return",
                  "src": "2224:31:39"
                }
              ]
            },
            "documentation": {
              "id": 4999,
              "nodeType": "StructuredDocumentation",
              "src": "2077:82:39",
              "text": " @dev Returns the supply of tokens.\n @return Total supply."
            },
            "functionSelector": "6c9c2faf",
            "id": 5009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "2173:9:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2182:2:39"
            },
            "returnParameters": {
              "id": 5003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5002,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5009,
                  "src": "2208:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5001,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:6:39"
            },
            "scope": 5057,
            "src": "2164:98:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5022,
              "nodeType": "Block",
              "src": "2462:52:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5019,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5012,
                        "src": "2503:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5017,
                        "name": "tokenStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "2479:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
                          "typeString": "struct TokenStorageLib.TokenStorage storage ref"
                        }
                      },
                      "id": 5018,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5202,
                      "src": "2479:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_TokenStorage_$5076_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_TokenStorage_$5076_storage_ptr_$",
                        "typeString": "function (struct TokenStorageLib.TokenStorage storage pointer,address) view returns (uint256)"
                      }
                    },
                    "id": 5020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:28:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5016,
                  "id": 5021,
                  "nodeType": "Return",
                  "src": "2472:35:39"
                }
              ]
            },
            "documentation": {
              "id": 5010,
              "nodeType": "StructuredDocumentation",
              "src": "2268:127:39",
              "text": " @dev Returns the balance of an address.\n @param who Address to lookup.\n @return Number of units."
            },
            "functionSelector": "f8b2cb4f",
            "id": 5023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "2409:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5012,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "2428:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5023,
                  "src": "2420:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:13:39"
            },
            "returnParameters": {
              "id": 5016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5023,
                  "src": "2456:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2456:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2455:6:39"
            },
            "scope": 5057,
            "src": "2400:114:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5039,
              "nodeType": "Block",
              "src": "2837:63:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5035,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5026,
                        "src": "2878:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5036,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5028,
                        "src": "2885:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5033,
                        "name": "tokenStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "2854:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStorage_$5076_storage",
                          "typeString": "struct TokenStorageLib.TokenStorage storage ref"
                        }
                      },
                      "id": 5034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5223,
                      "src": "2854:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_TokenStorage_$5076_storage_ptr_$_t_address_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_TokenStorage_$5076_storage_ptr_$",
                        "typeString": "function (struct TokenStorageLib.TokenStorage storage pointer,address,address) view returns (uint256)"
                      }
                    },
                    "id": 5037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:39:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5032,
                  "id": 5038,
                  "nodeType": "Return",
                  "src": "2847:46:39"
                }
              ]
            },
            "documentation": {
              "id": 5024,
              "nodeType": "StructuredDocumentation",
              "src": "2520:203:39",
              "text": " @dev Returns the allowance for a spender.\n @param owner Address of the owner of the tokens to spend.\n @param spender Address of the spender.\n @return Number of units."
            },
            "functionSelector": "c7c7e9ea",
            "id": 5040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllowed",
            "nameLocation": "2737:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5026,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2756:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "2748:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5028,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2771:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "2763:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2747:32:39"
            },
            "returnParameters": {
              "id": 5032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "2827:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2826:6:39"
            },
            "scope": 5057,
            "src": "2728:172:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5472,
              5676
            ],
            "body": {
              "id": 5055,
              "nodeType": "Block",
              "src": "3137:52:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5052,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5043,
                        "src": "3173:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5049,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5496,
                        "src": "3145:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$5496_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 5051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5472,
                      "src": "3145:27:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:37:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5054,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:37:39"
                }
              ]
            },
            "documentation": {
              "id": 5041,
              "nodeType": "StructuredDocumentation",
              "src": "2906:146:39",
              "text": " @dev Explicit override of transferOwnership from Claimable and Ownable\n @param newOwner Address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 5056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "3066:17:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5047,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5045,
                  "name": "Claimable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5496,
                  "src": "3118:9:39"
                },
                {
                  "id": 5046,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5702,
                  "src": "3129:7:39"
                }
              ],
              "src": "3109:28:39"
            },
            "parameters": {
              "id": 5044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5043,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "3092:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "3084:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3083:18:39"
            },
            "returnParameters": {
              "id": 5048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:0:39"
            },
            "scope": 5057,
            "src": "3057:132:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5058,
        "src": "977:2214:39",
        "usedErrors": []
      }
    ],
    "src": "641:2551:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {
        "TokenStorageLib": "0xA18437cfA47CEBA710f0300AF777b74252A6b4f8"
      },
      "address": "0xdf398F1a04E387087259632eFB14F5e80289669E",
      "transactionHash": "0x48d3a6f155c67ad9a890e8a6db971baab8093da955198d57b25cd18e780544f1"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-30T00:04:56.790Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "External storage for tokens. The storage is implemented in a separate contract to maintain state between token upgrades.",
    "kind": "dev",
    "methods": {
      "addBalance(address,uint256)": {
        "details": "Increases balance of an address.",
        "params": {
          "amount": "Number of units to add.",
          "to": "Address to increase."
        }
      },
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "getAllowed(address,address)": {
        "details": "Returns the allowance for a spender.",
        "params": {
          "owner": "Address of the owner of the tokens to spend.",
          "spender": "Address of the spender."
        },
        "returns": {
          "_0": "Number of units."
        }
      },
      "getBalance(address)": {
        "details": "Returns the balance of an address.",
        "params": {
          "who": "Address to lookup."
        },
        "returns": {
          "_0": "Number of units."
        }
      },
      "getSupply()": {
        "details": "Returns the supply of tokens.",
        "returns": {
          "_0": "Total supply."
        }
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "_contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner."
      },
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens",
        "params": {
          "_token": "ERC20Basic The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setAllowed(address,address,uint256)": {
        "details": "Sets the allowance for a spender.",
        "params": {
          "amount": "Qunatity of allowance.",
          "owner": "Address of the owner of the tokens to spend.",
          "spender": "Address of the spender."
        }
      },
      "subBalance(address,uint256)": {
        "details": "Decreases balance of an address.",
        "params": {
          "amount": "Number of units to subtract.",
          "from": "Address to decrease."
        }
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC223 compatible tokens",
        "params": {
          "_data": "Bytes The data passed from the caller.",
          "_from": "address The address that is transferring the tokens",
          "_value": "uint256 the amount of the specified token"
        }
      },
      "transferOwnership(address)": {
        "details": "Explicit override of transferOwnership from Claimable and Ownable",
        "params": {
          "newOwner": "Address to transfer ownership to."
        }
      }
    },
    "title": "TokenStorage",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}