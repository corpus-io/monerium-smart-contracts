{
  "contractName": "Migrations",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "last_completed_migration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "completed",
          "type": "uint256"
        }
      ],
      "name": "setCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "new_address",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last_completed_migration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"completed\",\"type\":\"uint256\"}],\"name\":\"setCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to set the pendingOwner address.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Migrations.sol\":\"Migrations\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/Migrations.sol\":{\"keccak256\":\"0xb7ecf00544061ddd5d86e0d8b25d46d837af0396f7c3bc0e93c938b10d08f111\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://7f4ad365f3e9d914ec5274306e0e9f2c97b9e742fa39a3568f88b7e3f42f3309\",\"dweb:/ipfs/QmaqoNTZtVYpphFDSwsUi25qxL7MUbQD9f5qvNaKXWamTe\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03193381811691909216171790556103a0806100396000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ce578063e30c3978146100f9578063f2fde38b1461010c578063fdacd5761461011f57600080fd5b80630900f0101461008d578063445df0ac146100a25780634e71e0c8146100be578063715018a6146100c6575b600080fd5b6100a061009b366004610321565b610132565b005b6100ab60025481565b6040519081526020015b60405180910390f35b6100a06101cb565b6100a0610253565b6000546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6001546100e1906001600160a01b031681565b6100a061011a366004610321565b6102bf565b6100a061012d366004610351565b610305565b6000546001600160a01b0316331461014957600080fd5b6002546040517ffdacd57600000000000000000000000000000000000000000000000000000000815282916001600160a01b0383169163fdacd576916101959160040190815260200190565b600060405180830381600087803b1580156101af57600080fd5b505af11580156101c3573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031633146101e257600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461026a57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146102d657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461031c57600080fd5b600255565b60006020828403121561033357600080fd5b81356001600160a01b038116811461034a57600080fd5b9392505050565b60006020828403121561036357600080fd5b503591905056fea264697066735822122088482ba6adda2fb57ef3847d46bb2aed4e573acdb913d9940561703e5ef96d7664736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ce578063e30c3978146100f9578063f2fde38b1461010c578063fdacd5761461011f57600080fd5b80630900f0101461008d578063445df0ac146100a25780634e71e0c8146100be578063715018a6146100c6575b600080fd5b6100a061009b366004610321565b610132565b005b6100ab60025481565b6040519081526020015b60405180910390f35b6100a06101cb565b6100a0610253565b6000546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6001546100e1906001600160a01b031681565b6100a061011a366004610321565b6102bf565b6100a061012d366004610351565b610305565b6000546001600160a01b0316331461014957600080fd5b6002546040517ffdacd57600000000000000000000000000000000000000000000000000000000815282916001600160a01b0383169163fdacd576916101959160040190815260200190565b600060405180830381600087803b1580156101af57600080fd5b505af11580156101c3573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031633146101e257600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461026a57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146102d657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461031c57600080fd5b600255565b60006020828403121561033357600080fd5b81356001600160a01b038116811461034a57600080fd5b9392505050565b60006020828403121561036357600080fd5b503591905056fea264697066735822122088482ba6adda2fb57ef3847d46bb2aed4e573acdb913d9940561703e5ef96d7664736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:923:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:54",
                "type": ""
              }
            ],
            "src": "14:309:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:76:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "451:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "447:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "439:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "492:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:25:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "409:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "420:4:54",
                "type": ""
              }
            ],
            "src": "328:177:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "621:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "633:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "644:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "629:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "621:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "663:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "678:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "686:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "674:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "656:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "656:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "580:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "591:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "602:4:54",
                "type": ""
              }
            ],
            "src": "510:226:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "811:110:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "857:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "866:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "869:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "859:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "859:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "859:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "832:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "841:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "853:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "824:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "821:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "882:33:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "892:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:23:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "882:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "777:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "788:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "800:6:54",
                "type": ""
              }
            ],
            "src": "741:180:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "691:440:12:-;;;774:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;567:5:36;:18;;-1:-1:-1;;;;;;567:18:36;;;575:10;567:18;;;805::12;;;;;;691:440;;;;;;",
  "deployedSourceMap": "691:440:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;952:176:12;;;;;;;;;731:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;731:36:12;;;;;;;;;;;;;;;;;;;;781:164:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;781:164:31;;;;1001:111:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:36;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:36;;;;;;;;;;;;;;;;;;;;;;;253:27:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:27:31;;;;601:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;601:96:31;;;;;;;836:110:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;836:110:12;;;;;952:176;1019:19;719:5:36;;;;705:10;:19;697:28;;;;;;1052:11:12;1019:45;;1074:8;:21;;;1096:24;;1074:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1074:47:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1074:47:12;;;;952:176;;:::o;731:36::-;;;;:::o;781:164:31:-;433:12;;;;419:10;:26;411:35;;;;;;870:12;;;863:5;;842:41;;870:12;;;;;863:5;;;;842:41;;;897:12;;;;889:20;;-1:-1:-1;;889:20:31;;;897:12;;;889:20;;;;915:25;;;781:164::o;1001:111:36:-;719:5;;;;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;1077:5;;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:36;;;1001:111::o;238:20::-;;;;;;:::o;253:27:31:-;;;;;;:::o;601:96::-;719:5:36;;;;705:10;:19;697:28;;;;;;669:12:31;:23;;-1:-1:-1;;669:23:31;;;;;;;;;;;;601:96::o;836:110:12:-;719:5:36;;;;705:10;:19;697:28;;;;;;903:24:12;:36;836:110::o",
  "source": "/**\n * Copyright 2022 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/ownership/Claimable.sol\";\n\ncontract Migrations is Claimable {\n\n    uint public last_completed_migration;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function setCompleted(uint completed) external onlyOwner {\n        last_completed_migration = completed;\n    }\n\n    function upgrade(address new_address) external onlyOwner {\n        Migrations upgraded = Migrations(new_address);\n        upgraded.setCompleted(last_completed_migration);\n    }\n\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts/contracts/Migrations.sol",
  "ast": {
    "absolutePath": "project:/contracts/Migrations.sol",
    "exportedSymbols": {
      "Claimable": [
        4383
      ],
      "Migrations": [
        2063
      ],
      "Ownable": [
        4589
      ]
    },
    "id": 2064,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2015,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:23"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 2016,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 4384,
        "src": "666:35:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2017,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "727:9:23"
            },
            "id": 2018,
            "nodeType": "InheritanceSpecifier",
            "src": "727:9:23"
          }
        ],
        "canonicalName": "Migrations",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2063,
        "linearizedBaseContracts": [
          2063,
          4383,
          4589
        ],
        "name": "Migrations",
        "nameLocation": "712:10:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "445df0ac",
            "id": 2020,
            "mutability": "mutable",
            "name": "last_completed_migration",
            "nameLocation": "756:24:23",
            "nodeType": "VariableDeclaration",
            "scope": 2063,
            "src": "744:36:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2019,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "744:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2028,
              "nodeType": "Block",
              "src": "800:33:23",
              "statements": [
                {
                  "expression": {
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2023,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4500,
                      "src": "808:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2024,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "816:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "816:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "808:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2027,
                  "nodeType": "ExpressionStatement",
                  "src": "808:18:23"
                }
              ]
            },
            "id": 2029,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:2:23"
            },
            "returnParameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:23"
            },
            "scope": 2063,
            "src": "787:46:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2040,
              "nodeType": "Block",
              "src": "896:53:23",
              "statements": [
                {
                  "expression": {
                    "id": 2038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2036,
                      "name": "last_completed_migration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2020,
                      "src": "906:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2037,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "933:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "906:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2039,
                  "nodeType": "ExpressionStatement",
                  "src": "906:36:23"
                }
              ]
            },
            "functionSelector": "fdacd576",
            "id": 2041,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2033,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "886:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "886:9:23"
              }
            ],
            "name": "setCompleted",
            "nameLocation": "848:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "completed",
                  "nameLocation": "866:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "861:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:16:23"
            },
            "returnParameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:23"
            },
            "scope": 2063,
            "src": "839:110:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "1012:119:23",
              "statements": [
                {
                  "assignments": [
                    2050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2050,
                      "mutability": "mutable",
                      "name": "upgraded",
                      "nameLocation": "1033:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 2061,
                      "src": "1022:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Migrations_$2063",
                        "typeString": "contract Migrations"
                      },
                      "typeName": {
                        "id": 2049,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2048,
                          "name": "Migrations",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2063,
                          "src": "1022:10:23"
                        },
                        "referencedDeclaration": 2063,
                        "src": "1022:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$2063",
                          "typeString": "contract Migrations"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2052,
                        "name": "new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "1055:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2051,
                      "name": "Migrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2063,
                      "src": "1044:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Migrations_$2063_$",
                        "typeString": "type(contract Migrations)"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Migrations_$2063",
                      "typeString": "contract Migrations"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1022:45:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2058,
                        "name": "last_completed_migration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1099:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2055,
                        "name": "upgraded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "1077:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$2063",
                          "typeString": "contract Migrations"
                        }
                      },
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCompleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2041,
                      "src": "1077:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:47:23"
                }
              ]
            },
            "functionSelector": "0900f010",
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2046,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2045,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "1002:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1002:9:23"
              }
            ],
            "name": "upgrade",
            "nameLocation": "964:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "new_address",
                  "nameLocation": "980:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "972:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:21:23"
            },
            "returnParameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:23"
            },
            "scope": 2063,
            "src": "955:176:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2064,
        "src": "703:431:23",
        "usedErrors": []
      }
    ],
    "src": "641:494:23"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Migrations.sol",
    "exportedSymbols": {
      "Claimable": [
        4383
      ],
      "Migrations": [
        2063
      ],
      "Ownable": [
        4589
      ]
    },
    "id": 2064,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2015,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:23"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 2016,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 4384,
        "src": "666:35:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2017,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "727:9:23"
            },
            "id": 2018,
            "nodeType": "InheritanceSpecifier",
            "src": "727:9:23"
          }
        ],
        "canonicalName": "Migrations",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2063,
        "linearizedBaseContracts": [
          2063,
          4383,
          4589
        ],
        "name": "Migrations",
        "nameLocation": "712:10:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "445df0ac",
            "id": 2020,
            "mutability": "mutable",
            "name": "last_completed_migration",
            "nameLocation": "756:24:23",
            "nodeType": "VariableDeclaration",
            "scope": 2063,
            "src": "744:36:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2019,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "744:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2028,
              "nodeType": "Block",
              "src": "800:33:23",
              "statements": [
                {
                  "expression": {
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2023,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4500,
                      "src": "808:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2024,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "816:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "816:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "808:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2027,
                  "nodeType": "ExpressionStatement",
                  "src": "808:18:23"
                }
              ]
            },
            "id": 2029,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:2:23"
            },
            "returnParameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:23"
            },
            "scope": 2063,
            "src": "787:46:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2040,
              "nodeType": "Block",
              "src": "896:53:23",
              "statements": [
                {
                  "expression": {
                    "id": 2038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2036,
                      "name": "last_completed_migration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2020,
                      "src": "906:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2037,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "933:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "906:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2039,
                  "nodeType": "ExpressionStatement",
                  "src": "906:36:23"
                }
              ]
            },
            "functionSelector": "fdacd576",
            "id": 2041,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2033,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "886:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "886:9:23"
              }
            ],
            "name": "setCompleted",
            "nameLocation": "848:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "completed",
                  "nameLocation": "866:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "861:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:16:23"
            },
            "returnParameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:23"
            },
            "scope": 2063,
            "src": "839:110:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "1012:119:23",
              "statements": [
                {
                  "assignments": [
                    2050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2050,
                      "mutability": "mutable",
                      "name": "upgraded",
                      "nameLocation": "1033:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 2061,
                      "src": "1022:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Migrations_$2063",
                        "typeString": "contract Migrations"
                      },
                      "typeName": {
                        "id": 2049,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2048,
                          "name": "Migrations",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2063,
                          "src": "1022:10:23"
                        },
                        "referencedDeclaration": 2063,
                        "src": "1022:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$2063",
                          "typeString": "contract Migrations"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2052,
                        "name": "new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "1055:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2051,
                      "name": "Migrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2063,
                      "src": "1044:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Migrations_$2063_$",
                        "typeString": "type(contract Migrations)"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Migrations_$2063",
                      "typeString": "contract Migrations"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1022:45:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2058,
                        "name": "last_completed_migration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1099:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2055,
                        "name": "upgraded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "1077:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$2063",
                          "typeString": "contract Migrations"
                        }
                      },
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCompleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2041,
                      "src": "1077:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:47:23"
                }
              ]
            },
            "functionSelector": "0900f010",
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2046,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2045,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "1002:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1002:9:23"
              }
            ],
            "name": "upgrade",
            "nameLocation": "964:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "new_address",
                  "nameLocation": "980:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "972:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:21:23"
            },
            "returnParameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:23"
            },
            "scope": 2063,
            "src": "955:176:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2064,
        "src": "703:431:23",
        "usedErrors": []
      }
    ],
    "src": "641:494:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x940d6a7973eabd10619c3410209d6cd7a6f8c9a0",
      "transactionHash": "0x2255b9d88973fed47e7ace811ca91070999529fac5f01de2e3309678d9186d0a"
    },
    "3": {
      "events": {},
      "links": {},
      "address": "0x7588325164f313875932ec5c7e4aa56e630a83c6",
      "transactionHash": "0xe2a455acf28e800bef86b0b3a2c59cbc43d7c0b0f45a8ce467d1aa2ccdcc14f2"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x74f24a66d2f2e142c7d3cddc3bd87082a1bfacbf",
      "transactionHash": "0x409af614c600eeb3c17d8bd8ea35c6f236cbfaf186be28eadba3fba658e722be"
    },
    "5": {
      "events": {},
      "links": {},
      "address": "0x1161026a823464A7e386F918309eaeebfd9dba34",
      "transactionHash": "0x8b1e9dfb358a9c9d8c1b77538960186bfe6a8d0d0cbebc56d6b41dad65853300"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x7588325164f313875932ec5c7e4aa56e630a83c6",
      "transactionHash": "0x5dc98725b359a07e67b2db71820663eee4e3967ba15e5c1806e567df8b63cedf"
    },
    "137": {
      "events": {
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE85B9a3628A83A14011753Cee89c137c405Ac933",
      "transactionHash": "0x77001de45e92f89fbdb4ed1249ac8afc77c74849c73183cf3790917c4b6d32dd"
    },
    "80001": {
      "events": {
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x92583b26CF720Bc2D9C004455eAC9427337eB80C",
      "transactionHash": "0x124922a2765c33c49f3f6bac18ae84493c00ed34afcaf2e83f276d7f93d6b938"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-28T12:29:08.861Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to set the pendingOwner address.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
