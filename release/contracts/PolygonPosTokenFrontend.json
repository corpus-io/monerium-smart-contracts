{
  "contractName": "PolygonPosTokenFrontend",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes3",
          "name": "ticker",
          "type": "bytes3"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "old",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "name": "Controller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEPOSITOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PREDICATE_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "h",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "h",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "recover",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticker",
      "outputs": [
        {
          "internalType": "bytes3",
          "name": "",
          "type": "bytes3"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "depositData",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes3\",\"name\":\"ticker\",\"type\":\"bytes3\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"old\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"Controller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PREDICATE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"h\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"depositData\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"h\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"recover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticker\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements a token forwarder. The token frontend is [ERC20 and ERC677] compliant and forwards standard methods to a controller. The primary function is to allow for a statically deployed contract for users to interact with while simultaneously allow the controllers to be upgraded when bugs are discovered or new functionality needs to be added. This token implement function for the Matic Polygon Brige.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the allowance for a spender\",\"params\":{\"owner\":\"The address of the owner of the tokens.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"Number of tokens the spender is allowed to spend.\"}},\"approve(address,uint256)\":{\"details\":\"Approves a spender [ERC20]. Note that using the approve/transferFrom presents a possible security vulnerability described in: https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit#heading=h.quou09mcbpzw Use transferAndCall to mitigate.\",\"params\":{\"amount\":\"The allowance of the spender.\",\"spender\":\"The address of the future spender.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number tokens associated with an address.\",\"params\":{\"who\":\"Address to lookup.\"},\"returns\":{\"_0\":\"Balance of address.\"}},\"burnFrom(address,uint256,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Burns tokens from token owner. This removfes the burned tokens from circulation.\",\"params\":{\"amount\":\"Number of tokens to burn.\",\"from\":\"Address of the token owner.\",\"h\":\"Hash which the token owner signed.\",\"r\":\"Signature component.\",\"s\":\"Sigature component.\",\"v\":\"Signature component.\"}},\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"childChainManager_\":\"Address of Polygon Pos's child chain manager proxy.\",\"name_\":\"Token name.\",\"symbol_\":\"Token symbol.\",\"ticker_\":\"3 letter currency ticker.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals in one token.\",\"returns\":{\"_0\":\"Number of decimals.\"}},\"deposit(address,bytes)\":{\"details\":\"Should be callable only by ChildChainManager Should handle deposit by minting the required amount for user\",\"params\":{\"depositData\":\"abi encoded amount\",\"user\":\"user address for whom deposit is being done\"}},\"getController()\":{\"details\":\"Gets the current controller.\",\"returns\":{\"_0\":\"Address of the controller.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Should be callable only by Matic's Predicate contract. Should handle deposit by minting the required amount for user.\",\"params\":{\"amount\":\"Number of tokens to mint.\",\"to\":\"Address to credit the tokens.\"}},\"mintTo(address,uint256)\":{\"details\":\"Mints new tokens.\",\"params\":{\"amount\":\"Number of tokens to mint.\",\"to\":\"Address to credit the tokens.\"}},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"_contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\",\"params\":{\"_token\":\"ERC20Basic The address of the token contract\"}},\"recover(address,address,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Recovers tokens from an address and reissues them to another address. In case a user loses its private key the tokens can be recovered by burning the tokens from that address and reissuing to a new address. To recover tokens the contract owner needs to provide a signature proving that the token owner has authorized the owner to do so.\",\"params\":{\"from\":\"Address to burn tokens from.\",\"h\":\"Hash which the token owner signed.\",\"r\":\"Signature component.\",\"s\":\"Sigature component.\",\"to\":\"Address to mint tokens to.\",\"v\":\"Signature component.\"},\"returns\":{\"amount\":\"Amount recovered.\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setController(address)\":{\"details\":\"Sets a new controller.\",\"params\":{\"address_\":\"Address of the controller.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC223 compatible tokens\",\"params\":{\"_data\":\"Bytes The data passed from the caller.\",\"_from\":\"address The address that is transferring the tokens\",\"_value\":\"uint256 the amount of the specified token\"}},\"totalSupply()\":{\"details\":\"Returns the total supply.\",\"returns\":{\"_0\":\"Number of tokens.\"}},\"transfer(address,uint256)\":{\"details\":\"Transfers tokens [ERC20].\",\"params\":{\"amount\":\"Number of tokens to transfer.\",\"to\":\"Recipient address.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Transfers tokens and subsequently calls a method on the recipient [ERC677]. If the recipient is a non-contract address this method behaves just like transfer.\",\"params\":{\"amount\":\"Number of tokens to transfer.\",\"data\":\"Additional data passed to the recipient's tokenFallback method.\",\"to\":\"Recipient address.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers tokens from a specific address [ERC20]. The address owner has to approve the spender beforehand.\",\"params\":{\"amount\":\"Number of tokens to transfer.\",\"from\":\"Address to debet the tokens from.\",\"to\":\"Recipient address.\"}},\"transferOwnership(address)\":{\"details\":\"Explicit override of transferOwnership from Claimable and Ownable\",\"params\":{\"newOwner\":\"Address to transfer ownership to.\"}},\"withdraw(uint256)\":{\"details\":\"Should burn user's tokens. This transaction will be verified when exiting on root chain\",\"params\":{\"amount\":\"amount of tokens to withdraw\"}}},\"title\":\"PolygonPosTokenFrontend\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"The contract is an abstract contract as a result of the internal modifier.\"},\"deposit(address,bytes)\":{\"notice\":\"Polygon Bridge Mechanism. Called when token is deposited on root chain\"},\"mint(address,uint256)\":{\"notice\":\"Polygon Bridge Mechanism. Called when token is withdrawn from child chain.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"withdraw(uint256)\":{\"notice\":\"Polygon Bridge Mechanism. Called when user wants to withdraw tokens back to root chain\"}},\"notice\":\"This contract is to be deployed on Matic Polygon network.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PolygonPosTokenFrontend.sol\":\"PolygonPosTokenFrontend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/ERC20Lib.sol\":{\"keccak256\":\"0x84b7fc9950d8d5a7e9b8faa399dc297ed1bd046e0b8f233ccb1694584ee311f4\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://1c88dfbb6605db2801a7b9df5ceda477b606c35bf5f233b9d16e44a32070ed40\",\"dweb:/ipfs/QmbvJN3o7xteiiPapcx3rwPjnFKhSV8HoUSGK2AVLkmBBM\"]},\"project:/contracts/ERC677Lib.sol\":{\"keccak256\":\"0xd3137baf53252bbed31816b7c957440fe2828d4f89ea45cb2454acc6c1b2ddee\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://593bdfe3432633e964309d0ad4c1da8fb9987c616ef1f5ccb8d5053955de13d7\",\"dweb:/ipfs/QmepWEmkxH3C4VJEPkQVtmtKbzkS85ugFanVBepBfUbrwn\"]},\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0x88bf933027008589c5ce5d07b3f7a2bf17a85ca8e120c5d103b7d16348279bbb\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://1201f893a1bcc0033621a6a604d043ad42bbccf7348f57ea4c86fd12a61ea898\",\"dweb:/ipfs/QmWxtLX8fJ91iNU5kNSJ5c9VjVXeF3CLUSzGPXvep1dQVH\"]},\"project:/contracts/IERC677Recipient.sol\":{\"keccak256\":\"0xa57eaa3fd57f52aadae85ad6b812b0fcf678c8080527f16515921ec30eb2fd75\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://5837a2c63d8dfd2e00722cc2c54020fba9c72cd894a85f1e36f37b6d120fae9f\",\"dweb:/ipfs/QmaajEtZ1ne2KZWWdZakq3nSnqaBaVvARonemX3k27jNsZ\"]},\"project:/contracts/IPolygonPosChildToken.sol\":{\"keccak256\":\"0x308395ec8a3a31dc24d71df167e5dcccc4647514c56594a69a2e73218def4f0a\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://779241a6b9eba719ab91040ec3bf421fab2f700d14f8912e7c918c8d16aec460\",\"dweb:/ipfs/QmVusoPkvnRpSFwZCY7rCzprTBPYxKTMT2ko9KwRynR2Hw\"]},\"project:/contracts/IPolygonPosRootToken.sol\":{\"keccak256\":\"0x45ea3e9ab4ff1364f44ecf4d623954b0e8e895bb6a97ed042645fd6df7812ab1\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://57b2ef562e54c31edd5f67621a94f729e50b8f7940de0b000ba76f6778bf6690\",\"dweb:/ipfs/QmcfNYbES59v275DMmggLwN6ZvWPWHUSPiNUMVyH8Bd394\"]},\"project:/contracts/IValidator.sol\":{\"keccak256\":\"0x1ab532c37b9d0bf71fe1849258b47c6c929bed4f72a56cd488069b5b3680ad31\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://4f5f5d2f5369e9f92c5e7e4a4c859dd29f5d9c9c5d1b2ece9a5e2d11a38e1220\",\"dweb:/ipfs/Qmau1ru9Te5aFGvpdLaybmAFaUqv1k9EPpJAi9UmpRJ8Sb\"]},\"project:/contracts/MintableController.sol\":{\"keccak256\":\"0x8d589c571d86e7a3d89ed680684235756381b337d290688bfdba4d6e7119aa62\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://2d3450e4636462ea7416584756ea0111ce55d2a42ed6ccdaaaea85cd6264b8b0\",\"dweb:/ipfs/QmSxcFb4zMuyAVjHzQvWfARvgqXZgvznL36zJJ7x4cksPq\"]},\"project:/contracts/MintableTokenLib.sol\":{\"keccak256\":\"0xf0913d020fccafe254906fcb7ea5252be4999160fe7b682a4ff1f5f411d987af\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://33e9858ae3bb32e36c0a0cb68d43527eeefa5a3147d9f05dd8dae2888cec0662\",\"dweb:/ipfs/QmXu7fcHSXn5w3bZhNxu6NZJPer5hgGKf4bETS6PeVWedB\"]},\"project:/contracts/PolygonPosTokenFrontend.sol\":{\"keccak256\":\"0xa666016ff1f676e585b70f32e52c7299e0fe396d864239e98838757ae4438a80\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://ba45676cb816108bf791e63f53318b2de28104c862be7e0f1d24ebbc95389620\",\"dweb:/ipfs/QmScCGp89cBhJ79NkwdXFsHfrwHzvTPJqTLXxvs3mEJEdc\"]},\"project:/contracts/SmartController.sol\":{\"keccak256\":\"0x4adab213bd1ed7cc8018fdb96e837153756295da185b3ad7393cd82725919e87\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://d3014ac08bfa185ae753d2ee64e2bde96eedc05664567efefd7f3510e0a9b62d\",\"dweb:/ipfs/QmXWgdksLVd5qKFRp55Watn4f5WXEH4zsZqgKm6iGb5jd8\"]},\"project:/contracts/SmartTokenLib.sol\":{\"keccak256\":\"0x1f77da1806a61303b67f47c14d5b773c48c24acf341cf3466bb40ac54e3521f9\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://f4f85ea88d1af6c71f824c99974d8c0d0027effbec149c87f03abbcacb884057\",\"dweb:/ipfs/QmTeGQ9dY6G4NeASqLaJ2exrK3kd7GpxdnP6rG3Bsmiag1\"]},\"project:/contracts/StandardController.sol\":{\"keccak256\":\"0x6301d597d48e73a535954bffc95f3452c6991e0ea5e5e6e055dcc0524a2c77c5\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://5bb90b2a56cff46824206757160475302e470dbf1bc87f6df7e871e0de5bbe17\",\"dweb:/ipfs/QmbZTnxBN1U7CMovm54wJFG6tWJXbVsX8sHShRhELxr2dp\"]},\"project:/contracts/SystemRole.sol\":{\"keccak256\":\"0x11d8dceb9a88d249a4592cd57453a3369cbcf05555abb8aedde4e248e4daebbe\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://ed43e978e07deb1cf0048257f495ca508877214aab2b9586dbe5881561679e4b\",\"dweb:/ipfs/QmPSLgzBKyNL1SffE7edEhEjZQ7SPmHYn4ftEQnpM9vnAe\"]},\"project:/contracts/TokenFrontend.sol\":{\"keccak256\":\"0x43b8865b22c4fef53a083c3756d0968e8371facd4d642c590ed653f469991ae2\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://d6b442a6271e9dac525719c050a4775ceb14d91adb1a56898a0d855f33edfe86\",\"dweb:/ipfs/QmP57hD3bNYai2bh3wZ1tHmxSRQgfph4RrHHzXgdVptBp7\"]},\"project:/contracts/TokenStorage.sol\":{\"keccak256\":\"0xe849abab5585dafabca5fe3d306d0fbdf1792be872209f5b617e0617ff9d6d92\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://e03762b54fe26cfeadc0f6e942ddf570b7e2f1d258c97ec14dd1822b39a4670a\",\"dweb:/ipfs/QmYMhr87b8d5cBSBry9rTT7F7DdQW852SB9QZK1oRdmYmc\"]},\"project:/contracts/TokenStorageLib.sol\":{\"keccak256\":\"0xb05416996147c191c8415c6f79845002fda2358f6faffc28bbddb74f1463f4d3\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://fb4a8bf65dde924a9e3c98d975b60ff08cde7e7aa97cac78f8875b26cd12cc8f\",\"dweb:/ipfs/QmSSDGzJEXZ3FAL29bN59tuj4M7hARvUQo2WxsNaCBZ9yt\"]},\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x40c5b0c6c8d908bc764cdcce514c824ce842411f43180111de7d0a75e6ae553e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de45edfc949d8922e1c9f07af298c29edabeb26454d8a2eb093a81b32474d610\",\"dweb:/ipfs/QmZyqeY8y8h6XQ23h2rzpr6bVEa7FCCCu7XwTa8fcJc4cY\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xf0625c71482671d551c3322ea3ab9eceedd2ec0bdbfdb12de13f27a3fffd38b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0d1ddbbd28155e759df54b2afad17c440b76bae1d66259679ff53b0aca8e81\",\"dweb:/ipfs/QmXdXPDuW2VDBB7YWoms55rb883noVFJXixKoR1namrwJR\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/ownership/Roles.sol\":{\"keccak256\":\"0x89d1a1e096dc468402c9620a2fe77208bae7be639f1c15175eff82128d066a4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51094d4a9c419154eaa3ddff3c674969c51683b799f8e06ddee31bfb0f74f8d2\",\"dweb:/ipfs/Qmb6hDjtfVvHcWYoF5SZ5HUQ3pRhtgz1DTRMaCDLuYqR92\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/* SPDX-License-Identifier: apache-2.0 */\n/**\n * Copyright 2022 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.8.11;\n\nimport \"./TokenFrontend.sol\";\nimport \"./IPolygonPosChildToken.sol\";\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title PolygonPosTokenFrontend\n * @notice This contract is to be deployed on Matic Polygon network.\n * @dev This contract implements a token forwarder.\n * The token frontend is [ERC20 and ERC677] compliant and forwards\n * standard methods to a controller. The primary function is to allow\n * for a statically deployed contract for users to interact with while\n * simultaneously allow the controllers to be upgraded when bugs are\n * discovered or new functionality needs to be added.\n * This token implement function for the Matic Polygon Brige.\n */\nabstract contract PolygonPosTokenFrontend is TokenFrontend, IPolygonPosChildToken {\n  bytes32 public constant DEPOSITOR_ROLE = keccak256(\"DEPOSITOR_ROLE\");\n\n  /**\n   * @dev Contract constructor.\n   * @notice The contract is an abstract contract as a result of the internal modifier.\n   * @param name_ Token name.\n   * @param symbol_ Token symbol.\n   * @param ticker_ 3 letter currency ticker.\n   * @param childChainManager_ Address of Polygon Pos's child chain manager proxy.\n   */\n  constructor(string memory name_, string memory symbol_, bytes3 ticker_,  address childChainManager_)\n    TokenFrontend(name_, symbol_, ticker_)\n    {\n      _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n      _setupRole(DEPOSITOR_ROLE, childChainManager_);\n    }\n\n  /**\n   * @notice Polygon Bridge Mechanism. Called when token is deposited on root chain\n   * @dev Should be callable only by ChildChainManager\n   * Should handle deposit by minting the required amount for user\n   * @param user user address for whom deposit is being done\n   * @param depositData abi encoded amount\n   */\n  function deposit(address user, bytes calldata depositData)\n    override\n    external\n  {\n    require(hasRole(DEPOSITOR_ROLE, msg.sender), \"caller is not a DEPOSITOR\");\n    uint256 amount = abi.decode(depositData, (uint256));\n    this.mintTo(user, amount);\n  }\n\n  /**\n   * @notice Polygon Bridge Mechanism. Called when user wants to withdraw tokens back to root chain\n   * @dev Should burn user's tokens. This transaction will be verified when exiting on root chain\n   * @param amount amount of tokens to withdraw\n   */\n  function withdraw(uint256 amount)\n    override\n    external\n  {\n    controller.burnFrom(msg.sender, amount);\n    emit Transfer(msg.sender, address(0x0), amount);\n  }\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts-private/contracts/PolygonPosTokenFrontend.sol",
  "ast": {
    "absolutePath": "project:/contracts/PolygonPosTokenFrontend.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "Address": [
        826
      ],
      "CanReclaimToken": [
        5438
      ],
      "Claimable": [
        5496
      ],
      "Context": [
        848
      ],
      "ERC165": [
        1047
      ],
      "ERC20Basic": [
        6012
      ],
      "ERC20Lib": [
        2646
      ],
      "ERC677Lib": [
        2713
      ],
      "HasNoContracts": [
        5525
      ],
      "HasNoEther": [
        5568
      ],
      "HasNoTokens": [
        5595
      ],
      "IAccessControl": [
        388
      ],
      "IERC165": [
        1059
      ],
      "IERC20": [
        2821
      ],
      "IERC677Recipient": [
        2837
      ],
      "IPolygonPosChildToken": [
        2853
      ],
      "IPolygonPosRootToken": [
        2866
      ],
      "IValidator": [
        2908
      ],
      "Math": [
        1924
      ],
      "MintableController": [
        3112
      ],
      "MintableTokenLib": [
        3208
      ],
      "NoOwner": [
        5608
      ],
      "Ownable": [
        5702
      ],
      "Pausable": [
        496
      ],
      "PolygonPosTokenFrontend": [
        3369
      ],
      "Roles": [
        5781
      ],
      "SafeERC20": [
        6036
      ],
      "SafeMath": [
        2236
      ],
      "SmartController": [
        3674
      ],
      "SmartTokenLib": [
        3839
      ],
      "StandardController": [
        4339
      ],
      "Strings": [
        1023
      ],
      "SystemRole": [
        4435
      ],
      "TokenFrontend": [
        4921
      ],
      "TokenStorage": [
        5057
      ],
      "TokenStorageLib": [
        5224
      ]
    },
    "id": 3370,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3264,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:30"
      },
      {
        "absolutePath": "project:/contracts/TokenFrontend.sol",
        "file": "./TokenFrontend.sol",
        "id": 3265,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3370,
        "sourceUnit": 4922,
        "src": "666:29:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IPolygonPosChildToken.sol",
        "file": "./IPolygonPosChildToken.sol",
        "id": 3266,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3370,
        "sourceUnit": 2854,
        "src": "696:37:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 3267,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3370,
        "sourceUnit": 316,
        "src": "735:58:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3269,
              "name": "TokenFrontend",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4921,
              "src": "1396:13:30"
            },
            "id": 3270,
            "nodeType": "InheritanceSpecifier",
            "src": "1396:13:30"
          },
          {
            "baseName": {
              "id": 3271,
              "name": "IPolygonPosChildToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2853,
              "src": "1411:21:30"
            },
            "id": 3272,
            "nodeType": "InheritanceSpecifier",
            "src": "1411:21:30"
          }
        ],
        "canonicalName": "PolygonPosTokenFrontend",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3268,
          "nodeType": "StructuredDocumentation",
          "src": "795:555:30",
          "text": " @title PolygonPosTokenFrontend\n @notice This contract is to be deployed on Matic Polygon network.\n @dev This contract implements a token forwarder.\n The token frontend is [ERC20 and ERC677] compliant and forwards\n standard methods to a controller. The primary function is to allow\n for a statically deployed contract for users to interact with while\n simultaneously allow the controllers to be upgraded when bugs are\n discovered or new functionality needs to be added.\n This token implement function for the Matic Polygon Brige."
        },
        "fullyImplemented": true,
        "id": 3369,
        "linearizedBaseContracts": [
          3369,
          2853,
          4921,
          315,
          1047,
          1059,
          388,
          848,
          2866,
          2821,
          5608,
          5525,
          5595,
          5438,
          5568,
          5496,
          5702
        ],
        "name": "PolygonPosTokenFrontend",
        "nameLocation": "1369:23:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "a3b0b5a3",
            "id": 3277,
            "mutability": "constant",
            "name": "DEPOSITOR_ROLE",
            "nameLocation": "1461:14:30",
            "nodeType": "VariableDeclaration",
            "scope": 3369,
            "src": "1437:68:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3273,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1437:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4445504f5349544f525f524f4c45",
                  "id": 3275,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1488:16:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9",
                    "typeString": "literal_string \"DEPOSITOR_ROLE\""
                  },
                  "value": "DEPOSITOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9",
                    "typeString": "literal_string \"DEPOSITOR_ROLE\""
                  }
                ],
                "id": 3274,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1478:9:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1478:27:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3305,
              "nodeType": "Block",
              "src": "1983:111:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3295,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2002:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 3296,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2022:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2022:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3294,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "1991:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3299,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:42:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3301,
                        "name": "DEPOSITOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3277,
                        "src": "2052:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3302,
                        "name": "childChainManager_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3286,
                        "src": "2068:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3300,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2041:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:46:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3304,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:46:30"
                }
              ]
            },
            "documentation": {
              "id": 3278,
              "nodeType": "StructuredDocumentation",
              "src": "1510:322:30",
              "text": " @dev Contract constructor.\n @notice The contract is an abstract contract as a result of the internal modifier.\n @param name_ Token name.\n @param symbol_ Token symbol.\n @param ticker_ 3 letter currency ticker.\n @param childChainManager_ Address of Polygon Pos's child chain manager proxy."
            },
            "id": 3306,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3289,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3280,
                    "src": "1954:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3290,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3282,
                    "src": "1961:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3291,
                    "name": "ticker_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3284,
                    "src": "1970:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes3",
                      "typeString": "bytes3"
                    }
                  }
                ],
                "id": 3292,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3288,
                  "name": "TokenFrontend",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4921,
                  "src": "1940:13:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "1940:38:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3280,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1861:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "1847:19:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3279,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3282,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1882:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "1868:21:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3281,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3284,
                  "mutability": "mutable",
                  "name": "ticker_",
                  "nameLocation": "1898:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "1891:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes3",
                    "typeString": "bytes3"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "bytes3",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes3",
                      "typeString": "bytes3"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3286,
                  "mutability": "mutable",
                  "name": "childChainManager_",
                  "nameLocation": "1916:18:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "1908:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1846:89:30"
            },
            "returnParameters": {
              "id": 3293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:0:30"
            },
            "scope": 3369,
            "src": "1835:259:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2847
            ],
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "2507:172:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3317,
                            "name": "DEPOSITOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3277,
                            "src": "2529:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3318,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2545:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2545:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3316,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "2521:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:35:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f742061204445504f5349544f52",
                        "id": 3321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2558:27:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bf83acb82821be980527785031475127c1bbfd3b23368930a9364d4792046b4",
                          "typeString": "literal_string \"caller is not a DEPOSITOR\""
                        },
                        "value": "caller is not a DEPOSITOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bf83acb82821be980527785031475127c1bbfd3b23368930a9364d4792046b4",
                          "typeString": "literal_string \"caller is not a DEPOSITOR\""
                        }
                      ],
                      "id": 3315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2513:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2513:73:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3323,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:73:30"
                },
                {
                  "assignments": [
                    3325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3325,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2600:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "2592:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2592:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3328,
                        "name": "depositData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "2620:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2634:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3329,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2634:7:30",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3331,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2633:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 3326,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2609:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2609:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:34:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2592:51:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3337,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3309,
                        "src": "2661:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3338,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "2667:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3334,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "2649:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolygonPosTokenFrontend_$3369",
                          "typeString": "contract PolygonPosTokenFrontend"
                        }
                      },
                      "id": 3336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4729,
                      "src": "2649:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:25:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:25:30"
                }
              ]
            },
            "documentation": {
              "id": 3307,
              "nodeType": "StructuredDocumentation",
              "src": "2098:319:30",
              "text": " @notice Polygon Bridge Mechanism. Called when token is deposited on root chain\n @dev Should be callable only by ChildChainManager\n Should handle deposit by minting the required amount for user\n @param user user address for whom deposit is being done\n @param depositData abi encoded amount"
            },
            "functionSelector": "cf2c52cb",
            "id": 3342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2429:7:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3313,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2483:8:30"
            },
            "parameters": {
              "id": 3312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2445:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2437:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "depositData",
                  "nameLocation": "2466:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2451:26:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2436:42:30"
            },
            "returnParameters": {
              "id": 3314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2507:0:30"
            },
            "scope": 3369,
            "src": "2420:259:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2852
            ],
            "body": {
              "id": 3367,
              "nodeType": "Block",
              "src": "3003:103:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3029:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3029:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3354,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3345,
                        "src": "3041:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3349,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "3009:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartController_$3674",
                          "typeString": "contract SmartController"
                        }
                      },
                      "id": 3351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3111,
                      "src": "3009:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3009:39:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3356,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:39:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3068:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3068:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 3362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3088:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3080:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3360,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3080:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3080:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3364,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3345,
                        "src": "3094:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3357,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4482,
                        2811
                      ],
                      "referencedDeclaration": 2811,
                      "src": "3059:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3059:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3366,
                  "nodeType": "EmitStatement",
                  "src": "3054:47:30"
                }
              ]
            },
            "documentation": {
              "id": 3343,
              "nodeType": "StructuredDocumentation",
              "src": "2683:255:30",
              "text": " @notice Polygon Bridge Mechanism. Called when user wants to withdraw tokens back to root chain\n @dev Should burn user's tokens. This transaction will be verified when exiting on root chain\n @param amount amount of tokens to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "id": 3368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2950:8:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3347,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2979:8:30"
            },
            "parameters": {
              "id": 3346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3345,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2967:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 3368,
                  "src": "2959:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2959:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2958:16:30"
            },
            "returnParameters": {
              "id": 3348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3003:0:30"
            },
            "scope": 3369,
            "src": "2941:165:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3370,
        "src": "1351:1757:30",
        "usedErrors": []
      }
    ],
    "src": "641:2468:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-29T22:36:59.507Z",
  "devdoc": {
    "details": "This contract implements a token forwarder. The token frontend is [ERC20 and ERC677] compliant and forwards standard methods to a controller. The primary function is to allow for a statically deployed contract for users to interact with while simultaneously allow the controllers to be upgraded when bugs are discovered or new functionality needs to be added. This token implement function for the Matic Polygon Brige.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the allowance for a spender",
        "params": {
          "owner": "The address of the owner of the tokens.",
          "spender": "The address of the spender."
        },
        "returns": {
          "_0": "Number of tokens the spender is allowed to spend."
        }
      },
      "approve(address,uint256)": {
        "details": "Approves a spender [ERC20]. Note that using the approve/transferFrom presents a possible security vulnerability described in: https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit#heading=h.quou09mcbpzw Use transferAndCall to mitigate.",
        "params": {
          "amount": "The allowance of the spender.",
          "spender": "The address of the future spender."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number tokens associated with an address.",
        "params": {
          "who": "Address to lookup."
        },
        "returns": {
          "_0": "Balance of address."
        }
      },
      "burnFrom(address,uint256,bytes32,uint8,bytes32,bytes32)": {
        "details": "Burns tokens from token owner. This removfes the burned tokens from circulation.",
        "params": {
          "amount": "Number of tokens to burn.",
          "from": "Address of the token owner.",
          "h": "Hash which the token owner signed.",
          "r": "Signature component.",
          "s": "Sigature component.",
          "v": "Signature component."
        }
      },
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "constructor": {
        "details": "Contract constructor.",
        "params": {
          "childChainManager_": "Address of Polygon Pos's child chain manager proxy.",
          "name_": "Token name.",
          "symbol_": "Token symbol.",
          "ticker_": "3 letter currency ticker."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals in one token.",
        "returns": {
          "_0": "Number of decimals."
        }
      },
      "deposit(address,bytes)": {
        "details": "Should be callable only by ChildChainManager Should handle deposit by minting the required amount for user",
        "params": {
          "depositData": "abi encoded amount",
          "user": "user address for whom deposit is being done"
        }
      },
      "getController()": {
        "details": "Gets the current controller.",
        "returns": {
          "_0": "Address of the controller."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "mint(address,uint256)": {
        "details": "Should be callable only by Matic's Predicate contract. Should handle deposit by minting the required amount for user.",
        "params": {
          "amount": "Number of tokens to mint.",
          "to": "Address to credit the tokens."
        }
      },
      "mintTo(address,uint256)": {
        "details": "Mints new tokens.",
        "params": {
          "amount": "Number of tokens to mint.",
          "to": "Address to credit the tokens."
        }
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "_contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner."
      },
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens",
        "params": {
          "_token": "ERC20Basic The address of the token contract"
        }
      },
      "recover(address,address,bytes32,uint8,bytes32,bytes32)": {
        "details": "Recovers tokens from an address and reissues them to another address. In case a user loses its private key the tokens can be recovered by burning the tokens from that address and reissuing to a new address. To recover tokens the contract owner needs to provide a signature proving that the token owner has authorized the owner to do so.",
        "params": {
          "from": "Address to burn tokens from.",
          "h": "Hash which the token owner signed.",
          "r": "Signature component.",
          "s": "Sigature component.",
          "to": "Address to mint tokens to.",
          "v": "Signature component."
        },
        "returns": {
          "amount": "Amount recovered."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setController(address)": {
        "details": "Sets a new controller.",
        "params": {
          "address_": "Address of the controller."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC223 compatible tokens",
        "params": {
          "_data": "Bytes The data passed from the caller.",
          "_from": "address The address that is transferring the tokens",
          "_value": "uint256 the amount of the specified token"
        }
      },
      "totalSupply()": {
        "details": "Returns the total supply.",
        "returns": {
          "_0": "Number of tokens."
        }
      },
      "transfer(address,uint256)": {
        "details": "Transfers tokens [ERC20].",
        "params": {
          "amount": "Number of tokens to transfer.",
          "to": "Recipient address."
        }
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Transfers tokens and subsequently calls a method on the recipient [ERC677]. If the recipient is a non-contract address this method behaves just like transfer.",
        "params": {
          "amount": "Number of tokens to transfer.",
          "data": "Additional data passed to the recipient's tokenFallback method.",
          "to": "Recipient address."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers tokens from a specific address [ERC20]. The address owner has to approve the spender beforehand.",
        "params": {
          "amount": "Number of tokens to transfer.",
          "from": "Address to debet the tokens from.",
          "to": "Recipient address."
        }
      },
      "transferOwnership(address)": {
        "details": "Explicit override of transferOwnership from Claimable and Ownable",
        "params": {
          "newOwner": "Address to transfer ownership to."
        }
      },
      "withdraw(uint256)": {
        "details": "Should burn user's tokens. This transaction will be verified when exiting on root chain",
        "params": {
          "amount": "amount of tokens to withdraw"
        }
      }
    },
    "title": "PolygonPosTokenFrontend",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "The contract is an abstract contract as a result of the internal modifier."
      },
      "deposit(address,bytes)": {
        "notice": "Polygon Bridge Mechanism. Called when token is deposited on root chain"
      },
      "mint(address,uint256)": {
        "notice": "Polygon Bridge Mechanism. Called when token is withdrawn from child chain."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "withdraw(uint256)": {
        "notice": "Polygon Bridge Mechanism. Called when user wants to withdraw tokens back to root chain"
      }
    },
    "notice": "This contract is to be deployed on Matic Polygon network.",
    "version": 1
  }
}