{
  "contractName": "BlacklistValidator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adversary",
          "type": "address"
        }
      ],
      "name": "Ban",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "Decision",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "friend",
          "type": "address"
        }
      ],
      "name": "Unban",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adversary",
          "type": "address"
        }
      ],
      "name": "ban",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "friend",
          "type": "address"
        }
      ],
      "name": "unban",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adversary\",\"type\":\"address\"}],\"name\":\"Ban\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"Decision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"friend\",\"type\":\"address\"}],\"name\":\"Unban\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adversary\",\"type\":\"address\"}],\"name\":\"ban\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"friend\",\"type\":\"address\"}],\"name\":\"unban\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements a validator which rejects transfers to blacklisted addresses.\",\"events\":{\"Ban(address)\":{\"details\":\"Emitted when an address is added to the blacklist.\",\"params\":{\"adversary\":\"Address added.\"}},\"Unban(address)\":{\"details\":\"Emitted when an address is removed from the blacklist.\",\"params\":{\"friend\":\"Address removed.\"}}},\"kind\":\"dev\",\"methods\":{\"ban(address)\":{\"details\":\"Adds an address to the blacklist.\",\"params\":{\"adversary\":\"Address to add.\"}},\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"_contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\",\"params\":{\"_token\":\"ERC20Basic The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC223 compatible tokens\",\"params\":{\"_data\":\"Bytes The data passed from the caller.\",\"_from\":\"address The address that is transferring the tokens\",\"_value\":\"uint256 the amount of the specified token\"}},\"transferOwnership(address)\":{\"details\":\"Explicit override of transferOwnership from Claimable and Ownable\",\"params\":{\"newOwner\":\"Address to transfer ownership to.\"}},\"unban(address)\":{\"details\":\"Removes an address from the blacklist.\",\"params\":{\"friend\":\"Address to remove.\"}},\"validate(address,address,uint256)\":{\"details\":\"Validates token transfer. Implements IValidator interface.\"}},\"title\":\"BlacklistValidator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BlacklistValidator.sol\":\"BlacklistValidator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/BlacklistValidator.sol\":{\"keccak256\":\"0xfd7dcf096b4cd76c4dcc6df5346c7fe9ba7640a2835aa6a35ca2e2a6584b5923\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://dd9b23688e606b47a8a8b286b985e1d399e8a9727dc7d90fa41d64fc806abb3f\",\"dweb:/ipfs/QmP17AH3AQjrwCWshsVeTnF3TZDEbRQ6fTRKxphsqptPCh\"]},\"project:/contracts/IValidator.sol\":{\"keccak256\":\"0x1234d1da0e449e4178eab3e25729b697c05dc436f428f3c449c64b59daadce4b\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://39449d31144bd77b26ab275c65c3600bb6a168811ddc6be95eb983199e3ad4cd\",\"dweb:/ipfs/QmUHXT6hE6gkpxmFdKcjSWXsoZj5iRoZJdRiEw6frVdoV2\"]},\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x40c5b0c6c8d908bc764cdcce514c824ce842411f43180111de7d0a75e6ae553e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de45edfc949d8922e1c9f07af298c29edabeb26454d8a2eb093a81b32474d610\",\"dweb:/ipfs/QmZyqeY8y8h6XQ23h2rzpr6bVEa7FCCCu7XwTa8fcJc4cY\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xf0625c71482671d551c3322ea3ab9eceedd2ec0bdbfdb12de13f27a3fffd38b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0d1ddbbd28155e759df54b2afad17c440b76bae1d66259679ff53b0aca8e81\",\"dweb:/ipfs/QmXdXPDuW2VDBB7YWoms55rb883noVFJXixKoR1namrwJR\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055341561002e57600080fd5b6108218061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100d65760003560e01c80639f727c2711610086578063c0ee0b8a11610063578063c0ee0b8a1461018f578063e30c3978146101a2578063f2fde38b146101b5578063f9f92be4146101c857005b80639f727c2714610151578063aa3ad4e414610159578063b9f145571461017c57005b8063715018a6116100b4578063715018a6146101065780638da5cb5b1461010e57806397c3ccd81461013e57005b806317ffc320146100d85780632aed7f3f146100eb5780634e71e0c8146100fe575b005b6100d66100e63660046106c2565b6101eb565b6100d66100f93660046106c2565b6102a7565b6100d661033b565b6100d66103c3565b600054610121906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d661014c3660046106c2565b61042f565b6100d6610492565b61016c6101673660046106e6565b6104e6565b6040519015158152602001610135565b6100d661018a3660046106c2565b610564565b6100d661019d366004610727565b600080fd5b600154610121906001600160a01b031681565b6100d66101c33660046106c2565b6105c4565b61016c6101d63660046106c2565b60026020526000908152604090205460ff1681565b6000546001600160a01b0316331461020257600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028691906107b0565b6000549091506102a3906001600160a01b038481169116836105cd565b5050565b6000546001600160a01b031633146102be57600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b505050505050565b6001546001600160a01b0316331461035257600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146103da57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461044657600080fd5b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f9a4e757235705bd178419abc9fa645392c5c7dce5b09940a81ef76794b84bd689190a250565b6000546001600160a01b031633146104a957600080fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156104e3573d6000803e3d6000fd5b50565b6001600160a01b03831660009081526002602052604081205460ff161561050f57506000610513565b5060015b6040805183815282151560208201526001600160a01b0380861692908716917f7421973e31248bda00bf2f04b80b46b34fc9e23ab57848234aed6cc5d437b6a8910160405180910390a39392505050565b6000546001600160a01b0316331461057b57600080fd5b6001600160a01b038116600081815260026020526040808220805460ff19169055517f866c4c4c778f85c380f911e6c43d125e57865fec38a5ccf53b62b74a8473ed169190a250565b6104e381610667565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610635573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065991906107c9565b61066257600080fd5b505050565b6000546001600160a01b0316331461067e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03811681146104e357600080fd5b6000602082840312156106d457600080fd5b81356106df816106ad565b9392505050565b6000806000606084860312156106fb57600080fd5b8335610706816106ad565b92506020840135610716816106ad565b929592945050506040919091013590565b6000806000806060858703121561073d57600080fd5b8435610748816106ad565b935060208501359250604085013567ffffffffffffffff8082111561076c57600080fd5b818701915087601f83011261078057600080fd5b81358181111561078f57600080fd5b8860208285010111156107a157600080fd5b95989497505060200194505050565b6000602082840312156107c257600080fd5b5051919050565b6000602082840312156107db57600080fd5b815180151581146106df57600080fdfea26469706673582212209790254f061685f67ba1f1e0302628ee9203839283d4be609bcf4146edeebe2264736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d65760003560e01c80639f727c2711610086578063c0ee0b8a11610063578063c0ee0b8a1461018f578063e30c3978146101a2578063f2fde38b146101b5578063f9f92be4146101c857005b80639f727c2714610151578063aa3ad4e414610159578063b9f145571461017c57005b8063715018a6116100b4578063715018a6146101065780638da5cb5b1461010e57806397c3ccd81461013e57005b806317ffc320146100d85780632aed7f3f146100eb5780634e71e0c8146100fe575b005b6100d66100e63660046106c2565b6101eb565b6100d66100f93660046106c2565b6102a7565b6100d661033b565b6100d66103c3565b600054610121906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d661014c3660046106c2565b61042f565b6100d6610492565b61016c6101673660046106e6565b6104e6565b6040519015158152602001610135565b6100d661018a3660046106c2565b610564565b6100d661019d366004610727565b600080fd5b600154610121906001600160a01b031681565b6100d66101c33660046106c2565b6105c4565b61016c6101d63660046106c2565b60026020526000908152604090205460ff1681565b6000546001600160a01b0316331461020257600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028691906107b0565b6000549091506102a3906001600160a01b038481169116836105cd565b5050565b6000546001600160a01b031633146102be57600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b505050505050565b6001546001600160a01b0316331461035257600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146103da57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461044657600080fd5b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f9a4e757235705bd178419abc9fa645392c5c7dce5b09940a81ef76794b84bd689190a250565b6000546001600160a01b031633146104a957600080fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156104e3573d6000803e3d6000fd5b50565b6001600160a01b03831660009081526002602052604081205460ff161561050f57506000610513565b5060015b6040805183815282151560208201526001600160a01b0380861692908716917f7421973e31248bda00bf2f04b80b46b34fc9e23ab57848234aed6cc5d437b6a8910160405180910390a39392505050565b6000546001600160a01b0316331461057b57600080fd5b6001600160a01b038116600081815260026020526040808220805460ff19169055517f866c4c4c778f85c380f911e6c43d125e57865fec38a5ccf53b62b74a8473ed169190a250565b6104e381610667565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610635573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065991906107c9565b61066257600080fd5b505050565b6000546001600160a01b0316331461067e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03811681146104e357600080fd5b6000602082840312156106d457600080fd5b81356106df816106ad565b9392505050565b6000806000606084860312156106fb57600080fd5b8335610706816106ad565b92506020840135610716816106ad565b929592945050506040919091013590565b6000806000806060858703121561073d57600080fd5b8435610748816106ad565b935060208501359250604085013567ffffffffffffffff8082111561076c57600080fd5b818701915087601f83011261078057600080fd5b81358181111561078f57600080fd5b8860208285010111156107a157600080fd5b95989497505060200194505050565b6000602082840312156107c257600080fd5b5051919050565b6000602082840312156107db57600080fd5b815180151581146106df57600080fdfea26469706673582212209790254f061685f67ba1f1e0302628ee9203839283d4be609bcf4146edeebe2264736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3484:55",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:55",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:109:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "94:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "105:5:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "112:42:55",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:54:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "91:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:65:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "84:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:73:55"
                  },
                  "nodeType": "YulIf",
                  "src": "81:93:55"
                }
              ]
            },
            "name": "validator_revert_contract_ERC20Basic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:55",
                "type": ""
              }
            ],
            "src": "14:166:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "274:189:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "320:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "329:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "322:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "322:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "322:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "295:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "291:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "291:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "284:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "345:36:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "358:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:23:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "349:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "427:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "390:36:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:43:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:43:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "452:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20Basic_$5117",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "240:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "251:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "263:6:55",
                "type": ""
              }
            ],
            "src": "185:278:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "538:189:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "584:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "586:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "586:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "559:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "568:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "580:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "548:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "609:36:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "635:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "622:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:23:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "613:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "691:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "654:36:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:43:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "654:43:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "706:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "716:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "706:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "504:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "515:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "527:6:55",
                "type": ""
              }
            ],
            "src": "468:259:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "833:125:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "843:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "855:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "866:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "851:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "843:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "885:9:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "900:6:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "908:42:55",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:55:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:74:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "878:74:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "802:9:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "813:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "824:4:55",
                "type": ""
              }
            ],
            "src": "732:226:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:376:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1113:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1125:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1115:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1115:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1115:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1088:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1097:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1084:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1084:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1109:2:55",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1080:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "1077:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1138:36:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1164:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1151:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:23:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1142:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1220:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1183:36:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:43:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:43:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1235:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1245:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1235:6:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1259:47:55",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1291:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1302:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1287:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:18:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1274:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:32:55"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1263:7:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1352:7:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1315:36:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:45:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1315:45:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1369:17:55",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1379:7:55"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1369:6:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1395:42:55",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1433:2:55",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:18:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1405:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:55"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1395:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1017:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1028:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1040:6:55",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1048:6:55",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1056:6:55",
                "type": ""
              }
            ],
            "src": "963:480:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:92:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1553:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1595:9:55"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1620:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1613:6:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1613:14:55"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1606:6:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1606:22:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1588:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:41:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1588:41:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1512:9:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1523:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1534:4:55",
                "type": ""
              }
            ],
            "src": "1448:187:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1763:683:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1809:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1818:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1821:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1811:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1811:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1811:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1784:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1793:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1780:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1805:2:55",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1776:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "1773:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1834:36:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1860:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1847:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:23:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1838:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1916:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1879:36:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:43:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:43:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1931:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1941:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1931:6:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:42:55",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1982:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1993:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1978:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1978:18:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1965:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:32:55"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1955:6:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2006:46:55",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2037:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2048:2:55",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:18:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2020:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:32:55"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2010:6:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2061:28:55",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2071:18:55",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2065:2:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2116:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2125:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2128:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2118:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2118:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2118:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2104:6:55"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2112:2:55"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2101:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2101:14:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2098:34:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2141:32:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2155:9:55"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2166:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2151:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2151:22:55"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2145:2:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2221:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2230:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2233:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2223:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2223:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2223:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2200:2:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2204:4:55",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2196:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2196:13:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2211:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2192:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2192:27:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:35:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:55:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2246:30:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2273:2:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2260:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:16:55"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2250:6:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2303:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2312:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2315:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2305:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2305:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2305:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2291:6:55"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2299:2:55"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2288:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:14:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2285:34:55"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2369:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2378:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2381:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2371:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2371:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2342:2:55"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2346:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2338:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2338:15:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2355:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:24:55"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2360:7:55"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2331:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2331:37:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2328:57:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2394:21:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2408:2:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2412:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2404:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2404:11:55"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2394:6:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2424:16:55",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2434:6:55"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2424:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1705:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1716:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1728:6:55",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1736:6:55",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1744:6:55",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1752:6:55",
                "type": ""
              }
            ],
            "src": "1640:806:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2532:103:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2578:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2587:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2590:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2580:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2580:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2580:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2553:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2562:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2549:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2549:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2574:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2545:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2542:52:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2603:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2619:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2613:5:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:16:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2603:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2498:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2509:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2521:6:55",
                "type": ""
              }
            ],
            "src": "2451:184:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2763:135:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2773:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2785:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2796:2:55",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2781:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2781:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2773:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2815:9:55"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2826:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2808:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2808:25:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2808:25:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2853:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2864:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2849:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2849:18:55"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2883:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2876:6:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2876:14:55"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2869:6:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2869:22:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2842:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2842:50:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2842:50:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2724:9:55",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2735:6:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2743:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2754:4:55",
                "type": ""
              }
            ],
            "src": "2640:258:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3032:168:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3042:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3054:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3065:2:55",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3050:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3042:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3084:9:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3099:6:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3107:42:55",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3095:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3095:55:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:74:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3077:74:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3171:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3182:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3167:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3167:18:55"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3187:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3160:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3160:34:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3160:34:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2993:9:55",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3004:6:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3012:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3023:4:55",
                "type": ""
              }
            ],
            "src": "2903:297:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:199:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3329:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3338:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3341:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3331:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3331:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3331:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3304:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3313:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3300:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3300:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3325:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3296:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3296:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "3293:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3354:29:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3373:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3367:5:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3367:16:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3358:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3436:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3445:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3448:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3438:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3438:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3438:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3405:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3426:5:55"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3419:6:55"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3419:13:55"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3412:6:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3412:21:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3402:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:32:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3395:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3395:40:55"
                  },
                  "nodeType": "YulIf",
                  "src": "3392:60:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3461:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3471:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3461:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3249:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3260:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3272:6:55",
                "type": ""
              }
            ],
            "src": "3205:277:55"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ERC20Basic(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20Basic_$5117(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ERC20Basic(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 55,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "900:1294:1:-;;;567:5:36;:18;;-1:-1:-1;;;;;;567:18:36;575:10;567:18;;;958:9:33;:14;950:23;;;;;;900:1294:1;;;;;;",
  "deployedSourceMap": "900:1294:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:1294:1;;599:152:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;599:152:30;-1:-1:-1;;;;;599:152:30;;;;;;;482:166:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;482:166:32;-1:-1:-1;;;;;482:166:32;;;;;781:164:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;781:164:31;;;;1001:111:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:36;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:36;;;;;;;;-1:-1:-1;;;;;238:20:36;;;;;;;;;;;;;;1461:124:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1461:124:1;-1:-1:-1;;;;;1461:124:1;;;;;1189:91:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1189:91:33;;;;1918:273:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1918:273:1;-1:-1:-1;;;;;1918:273:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1698:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1698:120:1;-1:-1:-1;;;;;1698:120:1;;;;;637:160:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;637:160:34;;;;-1:-1:-1;;;;;637:160:34;;;;;;;;;;;;;;;;253:27:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:27:31;;;;601:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;601:96:31;-1:-1:-1;;;;;601:96:31;;;;;986:42:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;986:42:1;-1:-1:-1;;;;;986:42:1;;;;;599:152:30;665:15;719:5:36;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;683:22:30;;;;;;700:4;683:22;;;;;;-1:-1:-1;;;;;683:16:30;;;;;:22;;;;;;;;;;;;;;-1:-1:-1;683:16:30;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;683:22:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;683:22:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;683:22:30;731:5;;683:22;;-1:-1:-1;711:35:30;;-1:-1:-1;;;;;711:19:30;;;;731:5;683:22;711:35;:19;:35;:::i;:::-;599:152;;:::o;482:166:32:-;555:20;719:5:36;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;-1:-1:-1;637:5:32;;;606:37;;;;;;-1:-1:-1;;;;;637:5:32;;;606:37;;;;;;586:13;;606:30;;;;;;:37;;;;;;;;;;;637:5;606:30;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;606:37:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;606:37:32;;;;482:166;;:::o;781:164:31:-;433:12;;-1:-1:-1;;;;;433:12:31;419:10;:26;411:35;;;;;;870:12;;;863:5;;842:41;;-1:-1:-1;;;;;870:12:31;;;;863:5;;;;842:41;;;897:12;;;;889:20;;-1:-1:-1;;889:20:31;;;-1:-1:-1;;;;;897:12:31;;889:20;;;;915:25;;;781:164::o;1001:111:36:-;719:5;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:36;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:36;;;1001:111::o;238:20::-;;;-1:-1:-1;;;;;238:20:36;;:::o;1461:124:1:-;719:5:36;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;1522:20:1;;;;;;:9;:20;;;;;;:27;;-1:-1:-1;;1522:27:1;1545:4;1522:27;;;1564:14;;;1522:20;1564:14;1461:124;:::o;1189:91:33:-;719:5:36;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;1238:5:33;;;:37;;-1:-1:-1;;;;;1238:5:33;;;;1261:4;1253:21;1238:37;;;;;1253:21;;1238:37;:5;:37;1253:21;1238:5;:37;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1238:37:33;1189:91::o;1918:273:1:-;-1:-1:-1;;;;;2039:15:1;;2009:10;2039:15;;;:9;:15;;;;;;;;2035:102;;;-1:-1:-1;2078:5:1;2035:102;;;-1:-1:-1;2122:4:1;2035:102;2151:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;2151:33:1;;;;;;;;;;;;;;;;;;;1918:273;;;;;:::o;1698:120::-;719:5:36;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;1758:17:1;;1778:5;1758:17;;;:9;:17;;;;;;:25;;-1:-1:-1;;1758:25:1;;;1798:13;;;1778:5;1798:13;1698:120;:::o;637:160:34:-;784:8;;;253:27:31;;;-1:-1:-1;;;;;253:27:31;;:::o;601:96::-;719:5:36;;-1:-1:-1;;;;;719:5:36;705:10;:19;697:28;;;;;;669:12:31;:23;;-1:-1:-1;;669:23:31;-1:-1:-1;;;;;669:23:31;;;;;;;;;;601:96::o;986:42:1:-;;;;;;;;;;;;;;;:::o;368:149:40:-;483:6;-1:-1:-1;;;;;483:15:40;;499:3;504:6;483:28;;;;;;;;;;;;;-1:-1:-1;;;;;483:28:40;-1:-1:-1;;;;;483:28:40;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:28:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;483:28:40;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;483:28:40;475:37;;;;;;;;368:149;;;:::o",
  "source": "/**\n * Copyright 2022 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/ownership/Claimable.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/NoOwner.sol\";\nimport \"./IValidator.sol\";\n\n/**\n * @title BlacklistValidator\n * @dev Implements a validator which rejects transfers to blacklisted addresses.\n */\ncontract BlacklistValidator is IValidator, Claimable, CanReclaimToken, NoOwner {\n\n    mapping (address => bool) public blacklist;\n\n    /**\n     * @dev Emitted when an address is added to the blacklist.\n     * @param adversary Address added.\n     */\n    event Ban(address indexed adversary);\n\n    /**\n     * @dev Emitted when an address is removed from the blacklist.\n     * @param friend Address removed.\n     */\n    event Unban(address indexed friend);\n\n    /**\n     * @dev Adds an address to the blacklist.\n     * @param adversary Address to add.\n     */\n    function ban(address adversary) external onlyOwner {\n        blacklist[adversary] = true;\n        emit Ban(adversary);\n    }\n\n    /**\n     * @dev Removes an address from the blacklist.\n     * @param friend Address to remove.\n     */\n    function unban(address friend) external onlyOwner {\n        blacklist[friend] = false;\n        emit Unban(friend);\n    }\n\n    /**\n     * @dev Validates token transfer.\n     * Implements IValidator interface.\n     */\n    function validate(address from, address to, uint amount)\n        external\n        returns (bool valid)\n    {\n        if (blacklist[from]) {\n            valid = false;\n        } else {\n            valid = true;\n        }\n        emit Decision(from, to, amount, valid);\n    }\n\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts/contracts/BlacklistValidator.sol",
  "ast": {
    "absolutePath": "project:/contracts/BlacklistValidator.sol",
    "exportedSymbols": {
      "BlacklistValidator": [
        1501
      ],
      "CanReclaimToken": [
        4543
      ],
      "Claimable": [
        4601
      ],
      "ERC20Basic": [
        5117
      ],
      "HasNoContracts": [
        4630
      ],
      "HasNoEther": [
        4673
      ],
      "HasNoTokens": [
        4700
      ],
      "IValidator": [
        2013
      ],
      "NoOwner": [
        4713
      ],
      "Ownable": [
        4807
      ],
      "SafeERC20": [
        5141
      ]
    },
    "id": 1502,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1385,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:24:10"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 1386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 4384,
        "src": "667:35:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/NoOwner.sol",
        "file": "./ownership/NoOwner.sol",
        "id": 1387,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 4496,
        "src": "703:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./ownership/CanReclaimToken.sol",
        "id": 1388,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 4326,
        "src": "737:41:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IValidator.sol",
        "file": "./IValidator.sol",
        "id": 1389,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 2014,
        "src": "779:26:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1391,
              "name": "IValidator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2013,
              "src": "956:10:10"
            },
            "id": 1392,
            "nodeType": "InheritanceSpecifier",
            "src": "956:10:10"
          },
          {
            "baseName": {
              "id": 1393,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "968:9:10"
            },
            "id": 1394,
            "nodeType": "InheritanceSpecifier",
            "src": "968:9:10"
          },
          {
            "baseName": {
              "id": 1395,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4325,
              "src": "979:15:10"
            },
            "id": 1396,
            "nodeType": "InheritanceSpecifier",
            "src": "979:15:10"
          },
          {
            "baseName": {
              "id": 1397,
              "name": "NoOwner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4495,
              "src": "996:7:10"
            },
            "id": 1398,
            "nodeType": "InheritanceSpecifier",
            "src": "996:7:10"
          }
        ],
        "canonicalName": "BlacklistValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1390,
          "nodeType": "StructuredDocumentation",
          "src": "807:117:10",
          "text": " @title BlacklistValidator\n @dev Implements a validator which rejects transfers to blacklisted addresses."
        },
        "fullyImplemented": true,
        "id": 1501,
        "linearizedBaseContracts": [
          1501,
          4495,
          4412,
          4482,
          4325,
          4455,
          4383,
          4589,
          2013
        ],
        "name": "BlacklistValidator",
        "nameLocation": "934:18:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f9f92be4",
            "id": 1402,
            "mutability": "mutable",
            "name": "blacklist",
            "nameLocation": "1044:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1011:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1401,
              "keyType": {
                "id": 1399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1020:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1011:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1400,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1031:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1403,
              "nodeType": "StructuredDocumentation",
              "src": "1060:113:10",
              "text": " @dev Emitted when an address is added to the blacklist.\n @param adversary Address added."
            },
            "id": 1407,
            "name": "Ban",
            "nameLocation": "1184:3:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "adversary",
                  "nameLocation": "1204:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "1188:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:27:10"
            },
            "src": "1178:37:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1408,
              "nodeType": "StructuredDocumentation",
              "src": "1221:116:10",
              "text": " @dev Emitted when an address is removed from the blacklist.\n @param friend Address removed."
            },
            "id": 1412,
            "name": "Unban",
            "nameLocation": "1348:5:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "friend",
                  "nameLocation": "1370:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "1354:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:24:10"
            },
            "src": "1342:36:10"
          },
          {
            "body": {
              "id": 1430,
              "nodeType": "Block",
              "src": "1537:73:10",
              "statements": [
                {
                  "expression": {
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1420,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "1547:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1422,
                      "indexExpression": {
                        "id": 1421,
                        "name": "adversary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "1557:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1547:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1570:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1547:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:27:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1427,
                        "name": "adversary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "1593:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1426,
                      "name": "Ban",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "1589:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1429,
                  "nodeType": "EmitStatement",
                  "src": "1584:19:10"
                }
              ]
            },
            "documentation": {
              "id": 1413,
              "nodeType": "StructuredDocumentation",
              "src": "1384:97:10",
              "text": " @dev Adds an address to the blacklist.\n @param adversary Address to add."
            },
            "functionSelector": "97c3ccd8",
            "id": 1431,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1417,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "1527:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1527:9:10"
              }
            ],
            "name": "ban",
            "nameLocation": "1495:3:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "mutability": "mutable",
                  "name": "adversary",
                  "nameLocation": "1507:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "1499:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:19:10"
            },
            "returnParameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:0:10"
            },
            "scope": 1501,
            "src": "1486:124:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1449,
              "nodeType": "Block",
              "src": "1773:70:10",
              "statements": [
                {
                  "expression": {
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1439,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "1783:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1441,
                      "indexExpression": {
                        "id": 1440,
                        "name": "friend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "1793:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1783:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1803:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1783:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1444,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:25:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1446,
                        "name": "friend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "1829:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1445,
                      "name": "Unban",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1412,
                      "src": "1823:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:13:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "EmitStatement",
                  "src": "1818:18:10"
                }
              ]
            },
            "documentation": {
              "id": 1432,
              "nodeType": "StructuredDocumentation",
              "src": "1616:102:10",
              "text": " @dev Removes an address from the blacklist.\n @param friend Address to remove."
            },
            "functionSelector": "b9f14557",
            "id": 1450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "1763:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1763:9:10"
              }
            ],
            "name": "unban",
            "nameLocation": "1732:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "friend",
                  "nameLocation": "1746:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "1738:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:16:10"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:10"
            },
            "scope": 1501,
            "src": "1723:120:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2012
            ],
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "2050:166:10",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1462,
                      "name": "blacklist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "2064:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1464,
                    "indexExpression": {
                      "id": 1463,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "2074:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2064:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1474,
                    "nodeType": "Block",
                    "src": "2125:37:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1470,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "2139:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2147:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2139:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1473,
                        "nodeType": "ExpressionStatement",
                        "src": "2139:12:10"
                      }
                    ]
                  },
                  "id": 1475,
                  "nodeType": "IfStatement",
                  "src": "2060:102:10",
                  "trueBody": {
                    "id": 1469,
                    "nodeType": "Block",
                    "src": "2081:38:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1465,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "2095:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2103:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2095:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "2095:13:10"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1477,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "2185:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1478,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "2191:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1479,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "2195:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1480,
                        "name": "valid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "2203:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1476,
                      "name": "Decision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "2176:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bool)"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "EmitStatement",
                  "src": "2171:38:10"
                }
              ]
            },
            "documentation": {
              "id": 1451,
              "nodeType": "StructuredDocumentation",
              "src": "1849:89:10",
              "text": " @dev Validates token transfer.\n Implements IValidator interface."
            },
            "functionSelector": "aa3ad4e4",
            "id": 1484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "1952:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1969:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "1961:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1455,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1983:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "1975:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1992:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "1987:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:39:10"
            },
            "returnParameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "2039:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "2034:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:12:10"
            },
            "scope": 1501,
            "src": "1943:273:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4359,
              4563
            ],
            "body": {
              "id": 1499,
              "nodeType": "Block",
              "src": "2454:52:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1496,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "2490:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1493,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "2462:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$4383_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4359,
                      "src": "2462:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2462:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "2462:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "2222:146:10",
              "text": " @dev Explicit override of transferOwnership from Claimable and Ownable\n @param newOwner Address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 1500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "2382:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1491,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1489,
                  "name": "Claimable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4383,
                  "src": "2434:9:10"
                },
                {
                  "id": 1490,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4589,
                  "src": "2445:7:10"
                }
              ],
              "src": "2425:28:10"
            },
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2408:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "2400:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2399:18:10"
            },
            "returnParameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2454:0:10"
            },
            "scope": 1501,
            "src": "2373:133:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1502,
        "src": "925:1583:10",
        "usedErrors": []
      }
    ],
    "src": "641:1868:10"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BlacklistValidator.sol",
    "exportedSymbols": {
      "BlacklistValidator": [
        1501
      ],
      "CanReclaimToken": [
        4543
      ],
      "Claimable": [
        4601
      ],
      "ERC20Basic": [
        5117
      ],
      "HasNoContracts": [
        4630
      ],
      "HasNoEther": [
        4673
      ],
      "HasNoTokens": [
        4700
      ],
      "IValidator": [
        2013
      ],
      "NoOwner": [
        4713
      ],
      "Ownable": [
        4807
      ],
      "SafeERC20": [
        5141
      ]
    },
    "id": 1502,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1385,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:24:10"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 1386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 4384,
        "src": "667:35:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/NoOwner.sol",
        "file": "./ownership/NoOwner.sol",
        "id": 1387,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 4496,
        "src": "703:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./ownership/CanReclaimToken.sol",
        "id": 1388,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 4326,
        "src": "737:41:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IValidator.sol",
        "file": "./IValidator.sol",
        "id": 1389,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 2014,
        "src": "779:26:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1391,
              "name": "IValidator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2013,
              "src": "956:10:10"
            },
            "id": 1392,
            "nodeType": "InheritanceSpecifier",
            "src": "956:10:10"
          },
          {
            "baseName": {
              "id": 1393,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "968:9:10"
            },
            "id": 1394,
            "nodeType": "InheritanceSpecifier",
            "src": "968:9:10"
          },
          {
            "baseName": {
              "id": 1395,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4325,
              "src": "979:15:10"
            },
            "id": 1396,
            "nodeType": "InheritanceSpecifier",
            "src": "979:15:10"
          },
          {
            "baseName": {
              "id": 1397,
              "name": "NoOwner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4495,
              "src": "996:7:10"
            },
            "id": 1398,
            "nodeType": "InheritanceSpecifier",
            "src": "996:7:10"
          }
        ],
        "canonicalName": "BlacklistValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1390,
          "nodeType": "StructuredDocumentation",
          "src": "807:117:10",
          "text": " @title BlacklistValidator\n @dev Implements a validator which rejects transfers to blacklisted addresses."
        },
        "fullyImplemented": true,
        "id": 1501,
        "linearizedBaseContracts": [
          1501,
          4495,
          4412,
          4482,
          4325,
          4455,
          4383,
          4589,
          2013
        ],
        "name": "BlacklistValidator",
        "nameLocation": "934:18:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f9f92be4",
            "id": 1402,
            "mutability": "mutable",
            "name": "blacklist",
            "nameLocation": "1044:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1011:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1401,
              "keyType": {
                "id": 1399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1020:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1011:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1400,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1031:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1403,
              "nodeType": "StructuredDocumentation",
              "src": "1060:113:10",
              "text": " @dev Emitted when an address is added to the blacklist.\n @param adversary Address added."
            },
            "id": 1407,
            "name": "Ban",
            "nameLocation": "1184:3:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "adversary",
                  "nameLocation": "1204:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "1188:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:27:10"
            },
            "src": "1178:37:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1408,
              "nodeType": "StructuredDocumentation",
              "src": "1221:116:10",
              "text": " @dev Emitted when an address is removed from the blacklist.\n @param friend Address removed."
            },
            "id": 1412,
            "name": "Unban",
            "nameLocation": "1348:5:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "friend",
                  "nameLocation": "1370:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "1354:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:24:10"
            },
            "src": "1342:36:10"
          },
          {
            "body": {
              "id": 1430,
              "nodeType": "Block",
              "src": "1537:73:10",
              "statements": [
                {
                  "expression": {
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1420,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "1547:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1422,
                      "indexExpression": {
                        "id": 1421,
                        "name": "adversary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "1557:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1547:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1570:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1547:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:27:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1427,
                        "name": "adversary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "1593:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1426,
                      "name": "Ban",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "1589:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1429,
                  "nodeType": "EmitStatement",
                  "src": "1584:19:10"
                }
              ]
            },
            "documentation": {
              "id": 1413,
              "nodeType": "StructuredDocumentation",
              "src": "1384:97:10",
              "text": " @dev Adds an address to the blacklist.\n @param adversary Address to add."
            },
            "functionSelector": "97c3ccd8",
            "id": 1431,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1417,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "1527:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1527:9:10"
              }
            ],
            "name": "ban",
            "nameLocation": "1495:3:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "mutability": "mutable",
                  "name": "adversary",
                  "nameLocation": "1507:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "1499:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:19:10"
            },
            "returnParameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:0:10"
            },
            "scope": 1501,
            "src": "1486:124:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1449,
              "nodeType": "Block",
              "src": "1773:70:10",
              "statements": [
                {
                  "expression": {
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1439,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "1783:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1441,
                      "indexExpression": {
                        "id": 1440,
                        "name": "friend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "1793:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1783:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1803:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1783:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1444,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:25:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1446,
                        "name": "friend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "1829:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1445,
                      "name": "Unban",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1412,
                      "src": "1823:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:13:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "EmitStatement",
                  "src": "1818:18:10"
                }
              ]
            },
            "documentation": {
              "id": 1432,
              "nodeType": "StructuredDocumentation",
              "src": "1616:102:10",
              "text": " @dev Removes an address from the blacklist.\n @param friend Address to remove."
            },
            "functionSelector": "b9f14557",
            "id": 1450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "1763:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1763:9:10"
              }
            ],
            "name": "unban",
            "nameLocation": "1732:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "friend",
                  "nameLocation": "1746:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "1738:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:16:10"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:10"
            },
            "scope": 1501,
            "src": "1723:120:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2012
            ],
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "2050:166:10",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1462,
                      "name": "blacklist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "2064:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1464,
                    "indexExpression": {
                      "id": 1463,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "2074:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2064:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1474,
                    "nodeType": "Block",
                    "src": "2125:37:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1470,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "2139:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2147:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2139:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1473,
                        "nodeType": "ExpressionStatement",
                        "src": "2139:12:10"
                      }
                    ]
                  },
                  "id": 1475,
                  "nodeType": "IfStatement",
                  "src": "2060:102:10",
                  "trueBody": {
                    "id": 1469,
                    "nodeType": "Block",
                    "src": "2081:38:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1465,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "2095:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2103:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2095:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "2095:13:10"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1477,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "2185:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1478,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "2191:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1479,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "2195:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1480,
                        "name": "valid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "2203:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1476,
                      "name": "Decision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "2176:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bool)"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "EmitStatement",
                  "src": "2171:38:10"
                }
              ]
            },
            "documentation": {
              "id": 1451,
              "nodeType": "StructuredDocumentation",
              "src": "1849:89:10",
              "text": " @dev Validates token transfer.\n Implements IValidator interface."
            },
            "functionSelector": "aa3ad4e4",
            "id": 1484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "1952:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1969:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "1961:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1455,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1983:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "1975:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1992:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "1987:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:39:10"
            },
            "returnParameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "2039:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "2034:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:12:10"
            },
            "scope": 1501,
            "src": "1943:273:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4359,
              4563
            ],
            "body": {
              "id": 1499,
              "nodeType": "Block",
              "src": "2454:52:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1496,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "2490:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1493,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "2462:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$4383_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4359,
                      "src": "2462:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2462:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "2462:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "2222:146:10",
              "text": " @dev Explicit override of transferOwnership from Claimable and Ownable\n @param newOwner Address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 1500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "2382:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1491,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1489,
                  "name": "Claimable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4383,
                  "src": "2434:9:10"
                },
                {
                  "id": 1490,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4589,
                  "src": "2445:7:10"
                }
              ],
              "src": "2425:28:10"
            },
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2408:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "2400:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2399:18:10"
            },
            "returnParameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2454:0:10"
            },
            "scope": 1501,
            "src": "2373:133:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1502,
        "src": "925:1583:10",
        "usedErrors": []
      }
    ],
    "src": "641:1868:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x774681a648125d46f35017cf6cec43a41857254e",
      "transactionHash": "0xeb6bd96fdab39ae4430583a6d30f979583a5d37b33d95ff48c8178529386511f"
    },
    "3": {
      "events": {},
      "links": {},
      "address": "0xf83482dd764551e464bb4f621a3599bfe763d69a",
      "transactionHash": "0x6fcea9b7807021ee93fa941e6733d9494e94b7ebb9371e43b86246e2c6db85b3"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x71db9342ab4fe41bb1f3f74f944cbebb2719f138",
      "transactionHash": "0xb57d4146abe77ab72962e167433c9ddb0dfe99b8bd2e07d16f866bcd1754e18b"
    },
    "5": {
      "events": {},
      "links": {},
      "address": "0x23CE4679400214BF32f1422344a3D8E7347cB6bA",
      "transactionHash": "0x999f2ce696417437103424611020a6c398c578a1eb1ad94d0a3e81427535d8e2"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x32ecd538c890826794d46b88b9790b09f6ce275f",
      "transactionHash": "0x0e62c11a8a0287728c2e289317b287ed54f29b2b2b9a43a3a6a5ef36babb99a1"
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0x6099eBa776Eae52654b2987Ac329E6B8beB4ffe7",
      "transactionHash": "0xfbd372bedd6db2c65a223463ebd97371bc90e4b7884e310d0f10cef40d7fa7e7"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-28T12:03:15.568Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Implements a validator which rejects transfers to blacklisted addresses.",
    "events": {
      "Ban(address)": {
        "details": "Emitted when an address is added to the blacklist.",
        "params": {
          "adversary": "Address added."
        }
      },
      "Unban(address)": {
        "details": "Emitted when an address is removed from the blacklist.",
        "params": {
          "friend": "Address removed."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "ban(address)": {
        "details": "Adds an address to the blacklist.",
        "params": {
          "adversary": "Address to add."
        }
      },
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "_contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner."
      },
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens",
        "params": {
          "_token": "ERC20Basic The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC223 compatible tokens",
        "params": {
          "_data": "Bytes The data passed from the caller.",
          "_from": "address The address that is transferring the tokens",
          "_value": "uint256 the amount of the specified token"
        }
      },
      "transferOwnership(address)": {
        "details": "Explicit override of transferOwnership from Claimable and Ownable",
        "params": {
          "newOwner": "Address to transfer ownership to."
        }
      },
      "unban(address)": {
        "details": "Removes an address from the blacklist.",
        "params": {
          "friend": "Address to remove."
        }
      },
      "validate(address,address,uint256)": {
        "details": "Validates token transfer. Implements IValidator interface."
      }
    },
    "title": "BlacklistValidator",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}