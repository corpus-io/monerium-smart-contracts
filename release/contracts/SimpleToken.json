{
  "contractName": "SimpleToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This simple [ERC20] compatible token is used in the test suite.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"_0\":\"An uint256 representing the amount owned by the passed address.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}}},\"title\":\"SimpleToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SimpleToken.sol\":\"SimpleToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/SimpleToken.sol\":{\"keccak256\":\"0xd0e5363600713d86819c03aa9d9273a7c094faffc0be4f7b8b3b37b8c8315234\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://0023f08629b043ba25733f9eed24ee33960feb506c81d9a08d6d40a59fa34b9c\",\"dweb:/ipfs/QmXdwpLG3gAazh4sMZFuYw1EmcPgQyuraECvptF6fErTRz\"]},\"project:/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xe795d00e83b693ae3f6f3d2358ff7abcdf37c1c544b0d97c273e2e0671a01fe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8107c3d29c803cd5dbbab079797cf00d50329dd67c3f905b3cf1940f357ee52c\",\"dweb:/ipfs/QmYyjiZbMH7XzaYx8fkRgZ3DXmXPjaPfTfkU6ABCg6YDE1\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506298968060018190553360009081526020819052604090205561028c806100396000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a082311461005d578063a9059cbb14610086575b600080fd5b6001545b6040519081526020015b60405180910390f35b61004a61006b3660046101b3565b6001600160a01b031660009081526020819052604090205490565b6100996100943660046101ce565b6100a9565b6040519015158152602001610054565b336000908152602081905260408120548211156100c557600080fd5b6001600160a01b0383166100d857600080fd5b336000908152602081905260409020546100f29083610178565b33600090815260208190526040808220929092556001600160a01b0385168152205461011e908361018b565b6001600160a01b038416600081815260208181526040918290209390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350600192915050565b60006101848284610227565b9392505050565b6000610184828461023e565b80356001600160a01b03811681146101ae57600080fd5b919050565b6000602082840312156101c557600080fd5b61018482610197565b600080604083850312156101e157600080fd5b6101ea83610197565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610239576102396101f8565b500390565b60008219821115610251576102516101f8565b50019056fea26469706673582212205a5dedf7024580068bb64beac1f3caba79953a7ee578a368e808cdb9efb5678764736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a082311461005d578063a9059cbb14610086575b600080fd5b6001545b6040519081526020015b60405180910390f35b61004a61006b3660046101b3565b6001600160a01b031660009081526020819052604090205490565b6100996100943660046101ce565b6100a9565b6040519015158152602001610054565b336000908152602081905260408120548211156100c557600080fd5b6001600160a01b0383166100d857600080fd5b336000908152602081905260409020546100f29083610178565b33600090815260208190526040808220929092556001600160a01b0385168152205461011e908361018b565b6001600160a01b038416600081815260208181526040918290209390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350600192915050565b60006101848284610227565b9392505050565b6000610184828461023e565b80356001600160a01b03811681146101ae57600080fd5b919050565b6000602082840312156101c557600080fd5b61018482610197565b600080604083850312156101e157600080fd5b6101ea83610197565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610239576102396101f8565b500390565b60008219821115610251576102516101f8565b50019056fea26469706673582212205a5dedf7024580068bb64beac1f3caba79953a7ee578a368e808cdb9efb5678764736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1488:56",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:56",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:56",
                "type": ""
              }
            ],
            "src": "14:177:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:147:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:56"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:56"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "370:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "379:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "382:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "372:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "372:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "372:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "324:42:56",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:54:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:65:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:73:56"
                  },
                  "nodeType": "YulIf",
                  "src": "293:93:56"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:56",
                "type": ""
              }
            ],
            "src": "196:196:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "467:116:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "513:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "515:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "515:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "515:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "488:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "497:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "484:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "484:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "480:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "480:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "477:52:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "538:39:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "567:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "548:18:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "548:29:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "538:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "433:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "444:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:56",
                "type": ""
              }
            ],
            "src": "397:186:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "675:167:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "721:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "730:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "733:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "723:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "723:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "723:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "696:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "705:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "692:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "717:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "688:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "688:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "685:52:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "746:39:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "775:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "756:18:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:29:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "794:42:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "821:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "832:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "804:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "804:32:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "794:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "633:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "644:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "656:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "664:6:56",
                "type": ""
              }
            ],
            "src": "588:254:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "942:92:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "952:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "964:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "975:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "960:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "952:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "994:9:56"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1019:6:56"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1012:6:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1012:14:56"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1005:6:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1005:22:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "987:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:41:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "987:41:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "911:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "922:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "933:4:56",
                "type": ""
              }
            ],
            "src": "847:187:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1071:152:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1088:1:56",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1091:77:56",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1081:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:88:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1081:88:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1185:1:56",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1188:4:56",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1178:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1178:15:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1178:15:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1209:1:56",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1212:4:56",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1202:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:15:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1202:15:56"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1039:184:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:76:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1299:22:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1301:16:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1301:18:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1301:18:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1293:1:56"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1296:1:56"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1290:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1290:8:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1287:34:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1330:17:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1342:1:56"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1345:1:56"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1338:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1338:9:56"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "1330:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1259:1:56",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1262:1:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "1268:4:56",
                "type": ""
              }
            ],
            "src": "1228:125:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1406:80:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1433:22:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1435:16:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1435:18:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1435:18:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1422:1:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1429:1:56"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1425:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1419:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1419:13:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1416:39:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1464:16:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1475:1:56"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1478:1:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1471:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1471:9:56"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1464:3:56"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1389:1:56",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1392:1:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1398:3:56",
                "type": ""
              }
            ],
            "src": "1358:128:56"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
      "id": 56,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "808:143:33:-:0;;;849:99;;;;;;;;;-1:-1:-1;888:8:33;873:12;:23;;;915:10;906:8;:20;;;;;;;;;;:35;808:143;;;;;;",
  "deployedSourceMap": "808:143:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:92:53;520:12;;445:92;;;160:25:56;;;148:2;133:18;445:92:53;;;;;;;;1223:108;;;;;;:::i;:::-;-1:-1:-1;;;;;1310:16:53;1288:7;1310:16;;;;;;;;;;;;1223:108;691:330;;;;;;:::i;:::-;;:::i;:::-;;;1012:14:56;;1005:22;987:41;;975:2;960:18;691:330:53;847:187:56;691:330:53;802:10;763:4;793:20;;;;;;;;;;;783:30;;;775:39;;;;;;-1:-1:-1;;;;;828:17:53;;820:26;;;;;;885:10;876:8;:20;;;;;;;;;;;:32;;901:6;876:24;:32::i;:::-;862:10;853:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;930:13:53;;;;;;:25;;948:6;930:17;:25::i;:::-;-1:-1:-1;;;;;914:13:53;;:8;:13;;;;;;;;;;;;:41;;;;966:33;160:25:56;;;914:13:53;;975:10;;966:33;;133:18:56;966:33:53;;;;;;;-1:-1:-1;1012:4:53;691:330;;;;:::o;3122:96:9:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:9:o;2755:::-;2813:7;2839:5;2843:1;2839;:5;:::i;196:196:56:-;264:20;;-1:-1:-1;;;;;313:54:56;;303:65;;293:93;;382:1;379;372:12;293:93;196:196;;;:::o;397:186::-;456:6;509:2;497:9;488:7;484:23;480:32;477:52;;;525:1;522;515:12;477:52;548:29;567:9;548:29;:::i;588:254::-;656:6;664;717:2;705:9;696:7;692:23;688:32;685:52;;;733:1;730;723:12;685:52;756:29;775:9;756:29;:::i;:::-;746:39;832:2;817:18;;;;804:32;;-1:-1:-1;;;588:254:56:o;1039:184::-;1091:77;1088:1;1081:88;1188:4;1185:1;1178:15;1212:4;1209:1;1202:15;1228:125;1268:4;1296:1;1293;1290:8;1287:34;;;1301:18;;:::i;:::-;-1:-1:-1;1338:9:56;;1228:125::o;1358:128::-;1398:3;1429:1;1425:6;1422:1;1419:13;1416:39;;;1435:18;;:::i;:::-;-1:-1:-1;1471:9:56;;1358:128::o",
  "source": "/* SPDX-License-Identifier: apache-2.0 */\n/**\n * Copyright 2022 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.8.11;\n\nimport \"./token/ERC20/BasicToken.sol\";\n\n/**\n * @title SimpleToken\n * @dev This simple [ERC20] compatible token is used in the test suite.\n */\ncontract SimpleToken is BasicToken {\n    constructor() {\n        totalSupply_ = 10000000;\n        balances[msg.sender] = totalSupply_;\n    }\n\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts-private/contracts/SimpleToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/SimpleToken.sol",
    "exportedSymbols": {
      "BasicToken": [
        5979
      ],
      "ERC20Basic": [
        6012
      ],
      "SafeMath": [
        2236
      ],
      "SimpleToken": [
        3433
      ]
    },
    "id": 3434,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3413,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:33"
      },
      {
        "absolutePath": "project:/contracts/token/ERC20/BasicToken.sol",
        "file": "./token/ERC20/BasicToken.sol",
        "id": 3414,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 5980,
        "src": "666:38:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3416,
              "name": "BasicToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5979,
              "src": "832:10:33"
            },
            "id": 3417,
            "nodeType": "InheritanceSpecifier",
            "src": "832:10:33"
          }
        ],
        "canonicalName": "SimpleToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3415,
          "nodeType": "StructuredDocumentation",
          "src": "706:101:33",
          "text": " @title SimpleToken\n @dev This simple [ERC20] compatible token is used in the test suite."
        },
        "fullyImplemented": true,
        "id": 3433,
        "linearizedBaseContracts": [
          3433,
          5979,
          6012
        ],
        "name": "SimpleToken",
        "nameLocation": "817:11:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3431,
              "nodeType": "Block",
              "src": "863:85:33",
              "statements": [
                {
                  "expression": {
                    "id": 3422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3420,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5891,
                      "src": "873:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030303030",
                      "id": 3421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "888:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000_by_1",
                        "typeString": "int_const 10000000"
                      },
                      "value": "10000000"
                    },
                    "src": "873:23:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3423,
                  "nodeType": "ExpressionStatement",
                  "src": "873:23:33"
                },
                {
                  "expression": {
                    "id": 3429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3424,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5889,
                        "src": "906:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3427,
                      "indexExpression": {
                        "expression": {
                          "id": 3425,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "915:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "915:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "906:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3428,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5891,
                      "src": "929:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "906:35:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3430,
                  "nodeType": "ExpressionStatement",
                  "src": "906:35:33"
                }
              ]
            },
            "id": 3432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:33"
            },
            "returnParameters": {
              "id": 3419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:33"
            },
            "scope": 3433,
            "src": "849:99:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3434,
        "src": "808:143:33",
        "usedErrors": []
      }
    ],
    "src": "641:311:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x47807b2b135B6AB9aa42c44418e33aEb72FB3fda",
      "transactionHash": "0x0c3d79c9ca763737408fb16ec4f2b5c4f4c93e59aa1ecf0e45c591ef1752176e"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-30T00:04:17.053Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This simple [ERC20] compatible token is used in the test suite.",
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "returns": {
          "_0": "An uint256 representing the amount owned by the passed address."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      }
    },
    "title": "SimpleToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}